{"version":3,"sources":["components/initializerJSON/pokemonInitJSON.js","components/context/PokemonContext.js","components/context/usePokemon.js","components/presentational/visualData/Types.js","components/presentational/PokemonScreen/CardPokemonAbout.jsx","components/presentational/PokemonScreen/AboutPokemon.jsx","components/presentational/PokemonScreen/StatsPokemon.jsx","components/presentational/PokemonScreen/CardPokemonEvoluciones.jsx","components/presentational/PokemonScreen/CardMovimientosPokemon.jsx","components/presentational/PokemonScreen/MostrarMovimientosPokemon.jsx","components/form/move/tags_validation/tag_move.js","components/form/move/form_validation/schema_validation/move_schema.js","components/form/move/form_validation/error_validation/move_errors.js","components/presentational/PokemonScreen/AddMoveForm.jsx","components/presentational/PokemonScreen/MoviEvoPokemon.jsx","components/nav/nav_principal.jsx","components/screens/PokemonScreen.jsx","components/presentational/PokemonAllScreen/NavPokemonAll.jsx","components/img/spinner5.gif","components/presentational/PokemonAllScreen/CardPokemon.jsx","components/presentational/PokemonAllScreen/MostrarCard.jsx","components/presentational/PokemonAllScreen/ContenedorPokemons.jsx","components/form/pokemon/tags_validation/tag_pokemon.js","components/form/pokemon/form_validation/schema_validation/pokemon_schema.js","components/form/pokemon/form_validation/error_validation/pokemon_errors.js","components/presentational/PokemonAllScreen/AddPokemonAll.jsx","components/presentational/PokemonAllScreen/PaginaMoverNav.jsx","components/screens/PokemonAllScreen.jsx","components/presentational/MovimientosAllScreen/CardMovimiento.jsx","components/presentational/MovimientosAllScreen/MostrarMovimientos.jsx","components/presentational/MovimientosAllScreen/AddMoveAll.jsx","components/screens/MovimientosAllScreen.jsx","components/img/PokeImgs/PokeBall.png","components/screens/MovimientoScreen.jsx","components/screens/Error504.jsx","components/form/login/tags_validation/tag_login.js","components/form/login/form_validation/schema_validation/login_schema.js","components/form/login/form_validation/error_validation/login_errors.js","components/screens/LoginScreen.jsx","components/form/newUser/tags_validation/tag_newUser.js","components/form/newUser/form_validation/schema_validation/newUser_schema.js","components/form/newUser/form_validation/error_validation/newUser_errors.js","components/screens/NewUserScreen.jsx","components/presentational/UsuariosAllScreen/CardUser.jsx","components/presentational/UsuariosAllScreen/MostrarUsers.jsx","components/form/addUser/tags_validation/tag_newUser.js","components/form/addUser/form_validation/schema_validation/addUser_schema.js","components/form/addUser/form_validation/error_validation/addUser_errors.js","components/presentational/UsuariosAllScreen/AddUserFromix.jsx","components/usuario/mocks/usuarios_mocks.js","components/screens/UsuariosAllScreen.jsx","components/presentational/UsuarioScreen/EditUserFromix.jsx","components/screens/UsuarioScreen.jsx","components/footer/Footer.jsx","App.js","index.js"],"names":["pokemonInit","PokemonContext","createContext","UsePokemon","useContext","obtenerClassType","type","CardPokemonAbout","pokemon","imgSrc","id","className","src","alt","name","types","map","el","idx","AboutPokemon","species","flavor_text_entries","flavor_text","StatsPokemon","greaterStat","may","stats","forEach","stat","base_stat","statBar","style","width","total","sumarStats","CardPokemonEvoluciones","url","description","arrayURL","split","to","CardMovimientosPokemon","pokeMove","local","EliminarPoder","useState","power","move","setMove","useEffect","obtenerMove","a","fetch","data","json","dataJSON","MostrarMovimientoPokemon","movesAll","TAGS_VALIDATITION_FROM","DESCRIPTION","IS_REQUIRED","NAME","TYPE","POWER","IS_INTEGER","IS_NUMBER","IS_POSITIVE","Schema","Yup","shape","required","positive","integer","errorHandle","errors","AddMoveForm","setPokemon","initialValues","validationSchema","onSubmit","v","alert","JSON","stringify","moves","placeholder","MoviEvoPokemon","evoluciones","agregarMoves","setAgregarMoves","MoviEvo","setMoviEvo","movieEvoState","msg","onClick","movimientoName","filter","Nav","active","setActive","PokemonScreen","useParams","PokemonInitPokemon","setSpecies","setEvoluciones","obtenerPokemon","evolucionesNameArray","descriptionArray","obtenerIdEvolutionPokemon","i","evolucionesIdArray","leng","length","push","evolution_chain","chain","evolves_to","window","scrollTo","obtenerNameEvolutionPokemon","Provider","value","NavPokemonAll","offset","limit","setOffset","filtro","setFiltro","setPage","cantMaximaPokemon","cantPokemonFetch","page","setAgregarPokemon","onChange","evt","target","CardPokemon","spinner","setSpinner","Spinner","MostrarCard","pokemonArray","ContenedorPokemons","pokemonAll","setCantMaximaPokemon","setPokemonAllArray","iterar","auxArray","arrayFiltro","includes","ID","AddPokemonAll","PaginaMoverNav","cantPage","setCantPage","Math","ceil","PokemonAllScreen","setPokemonAll","agregarPokemon","obtenerPokemons","results","CardMovimiento","MostrarMovimientos","movesActuales","setMovesActuales","AddMoveAll","setmovesAll","MovimientosAllScreen","obtenerMovimientos","MovimientoScreen","pagNext","setPagNext","pagBack","setPagBack","parseInt","pokeball","Error504","pokeBall","EMAIL","PASS","email","pass","LoginScreen","navigate","useNavigate","newUser","REPASS","rePass","NewUserScreen","goBack","CardUser","user","process","MostrarUsers","userAll","usuariosActuales","setUsuariosActuales","AddUserFromix","setUserAll","setAgregarUsuario","console","log","userData","UsuariosAllScreen","users","userInit","agregarUsuario","EditUserFromix","setEditarUsuario","UsuarioScreen","setUser","editarUsuario","Footer","href","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b5e45d2.chunk.js","sourcesContent":["const pokemonInit={\r\n    \"abilities\": [\r\n        {\r\n            \"ability\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            },\r\n            \"is_hidden\": \"\",\r\n            \"slot\": 1\r\n        },\r\n        \r\n    ],\r\n    \"base_experience\": \"\",\r\n    \"forms\": [\r\n        {\r\n            \"name\": \"\",\r\n            \"url\": \"\"\r\n        }\r\n    ],\r\n    \"id\": 7,\r\n    \"is_default\": true,\r\n    \"location_area_encounters\": \"\",\r\n    \"moves\": [\r\n        {\r\n            \"move\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            },\r\n            \"version_group_details\": [\r\n                {\r\n                    \"level_learned_at\": 0,\r\n                    \"move_learn_method\": {\r\n                        \"name\": \"\",\r\n                        \"url\": \"\"\r\n                    },\r\n                    \"version_group\": {\r\n                        \"name\": \"\",\r\n                        \"url\": \"\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"name\": \"\",\r\n    \"order\": 0,\r\n    \"past_types\": [],\r\n    \"species\": {\r\n        \"name\": \"\",\r\n        \"url\": \"\"\r\n    },\r\n    \"stats\": [\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        }\r\n    ],\r\n    \"types\": [\r\n        {\r\n            \"slot\": 1,\r\n            \"type\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        }\r\n    ],\r\n};\r\nexport default pokemonInit;","import { createContext } from \"react\";\r\nimport pokemonInit from \"../initializerJSON/pokemonInitJSON\";\r\nconst PokemonContext= createContext(pokemonInit);\r\nexport default PokemonContext;","import { useContext } from 'react';\r\n//Contexto\r\nimport PokemonContext from './PokemonContext';\r\n\r\nexport function UsePokemon() {\r\n    return (\r\n        useContext(PokemonContext)\r\n    )\r\n}\r\n\r\nexport default UsePokemon;","export const obtenerClassType = (type) => {\r\n    switch (type) {\r\n        case 'fire': return 'type fas fa-fire';\r\n        case 'water': return 'type fas fa-tint';\r\n        case 'electric': return 'type fas fa-bolt';\r\n        case 'ground': return 'type fas fa-mountain';\r\n        case 'grass': return 'type fas fa-leaf';\r\n        case 'ghost': return 'type fas fa-ghost';\r\n        case 'flying': return 'type fas fa-feather-alt';\r\n        case 'bug': return 'type fas fa-bug';\r\n        case 'rock': return 'type fas fa-circle';\r\n        case 'fighting': return 'type fas fa-hand-rock';\r\n        case 'steel': return 'type fas fa-cog';\r\n        case 'dragon': return 'type fas fa-dragon';\r\n        case 'poison': return 'type fas fa-skull-crossbones';\r\n        case 'ice': return 'type fas fa-snowflake';\r\n        case 'normal': return 'type far fa-circle';\r\n        case 'psychic': return 'type fab fa-battle-net';\r\n        case 'fairy': return 'type fas fa-bahai';\r\n        case 'dark': return 'type fas fa-moon';\r\n        default: return '';\r\n        //falta hada fairy psychic normal dark\r\n    }\r\n}\r\nexport default obtenerClassType;","import React from 'react'\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\nimport \"../../../styles/components/CardPokemonAbout.css\"\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n\r\n\r\n\r\n\r\nexport const CardPokemonAbout = () => {\r\n\r\n  const pokemon = UsePokemon();\r\n  const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + pokemon.id + \".svg\";\r\n\r\n  return (\r\n    <div className=\"CardPokemonAbout\">\r\n      <div className=\"contenedor1\">\r\n        <div className=\"contenedor2\">\r\n          <div className=\"CardPokemon\">\r\n            <img className=\"CardPokemon__img\" src={imgSrc} alt=\"imagen\" />\r\n            <h5 className=\"CardPokemonAbout__GOLD\">HI THERE! I'M </h5>\r\n            <h3 className=\"CardPokemonAbout__CardPokemon__name animate__animated animate__fadeIn\">\r\n              <span className=\"CardPokemonAbout__MyPokemonScreenHeader__blink\">[</span> {pokemon.name}{\" \"}\r\n              <span className=\"CardPokemonAbout__MyPokemonScreenHeader__blink\">]</span>\r\n            </h3>\r\n            <div  className=\"flex\">\r\n            {pokemon.types.map((el, idx) => <i key={idx} className={obtenerClassType(el.type.name)}></i>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport UsePokemon from \"../../context/usePokemon\";\r\nimport { CardPokemonAbout } from './CardPokemonAbout';\r\nimport '../../../styles/components/pokeTypes.css'\r\n//import CardPokemon from '../PokemonAllScreen/CardPokemon';\r\nconst AboutPokemon = ({species} ) => {\r\n    const pokemon = UsePokemon();\r\n    return (\r\n        <div className=\"AboutPokemon\">\r\n\r\n            <CardPokemonAbout />\r\n            <div className='AboutPokemon__flex' >    \r\n                {/* <h5 className='GOLD'>INTRODUCTION</h5> */}\r\n                <h2>About Me</h2>\r\n                <hr className='AboutPokemon__hr'/>\r\n                <p>{species.flavor_text_entries[0].flavor_text}</p>\r\n                <p className='sign animate__animated animate__fadeIn '>Im {pokemon.name} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutPokemon;","import React from 'react'\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n//import CardPokemon from '../PokemonAllScreen/CardPokemon';\r\nconst StatsPokemon = () => {\r\n    const pokemon = UsePokemon();\r\n\r\n    const sumarStats =() =>{\r\n        let total = 0;\r\n         pokemon.stats.forEach(stat => {\r\n            total += stat.base_stat\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const greaterStat = () => {\r\n        let may = 0;\r\n        pokemon.stats.forEach(stat => {\r\n            if (may < stat.base_stat) {\r\n                may = stat.base_stat\r\n            }\r\n        });\r\n        return may\r\n    }\r\n        \r\n\r\n     let statBar = pokemon.stats.map((stat,idx)=>\r\n         <div key={idx} className='StatsPokemon__statBar' style={{width: `${stat.base_stat * 100 / greaterStat()}%`}}>{/* {greaterStat()} */}</div> \r\n     )\r\n\r\n\r\n    return (\r\n        <div className=\"StatsPokemon\">\r\n{/* \r\n            <h5 className='GOLD'>SOME STADISTICS</h5> */}\r\n            <h2>My Stats</h2>\r\n            <hr className='AboutPokemon__hr'/>\r\n            <p>I'm a Freelancer Pokemon, living in the wild. Waiting for someone like you, who wants to be a pokemon master, also, i want to meet new people and win some experience, and maybe if we train a lot, EVOLVE! I don't have degrees or things like that, but i can show you my stats where you can see my true potential!   </p>            \r\n    \r\n            <div className='StatsPokemon__stats'>\r\n          \r\n                <ul className='StatsPokemon__stats_left'>\r\n                    <li>HP:</li>\r\n                    <li>ATTACK</li>\r\n                    <li>DEFENSE</li>\r\n                    <li>SPECIAL-ATTACK</li>\r\n                    <li>SPECIAL-DEFENSE</li>\r\n                    <li>SPEED</li>\r\n                    <li>TOTAL</li>\r\n                </ul>\r\n                <div className='StatsPokemon__stats_center'>\r\n                    {statBar}\r\n                </div> \r\n                <ul className='StatsPokemon__stats_right' >\r\n                    <li>{pokemon.stats[0].base_stat}</li>\r\n                    <li>{pokemon.stats[1].base_stat}</li>\r\n                    <li>{pokemon.stats[2].base_stat}</li>\r\n                    <li>{pokemon.stats[3].base_stat}</li>\r\n                    <li>{pokemon.stats[4].base_stat}</li>\r\n                    <li>{pokemon.stats[5].base_stat}</li>\r\n                    <li>{sumarStats()}</li>\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsPokemon;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n//style\r\nimport \"../../../styles/components/CardPokemonEvoluciones.css\";\r\n\r\nfunction CardPokemonEvoluciones({ name, url, description }) {\r\n    let id = 1;\r\n    let arrayURL = url.split('/');\r\n    if (arrayURL[6]) {\r\n        id = arrayURL[6];\r\n    }\r\n    const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + id + \".svg\";\r\n\r\n    return (\r\n        <Link to={\"/pokemon/\"+id}>\r\n        <div className=\"CardPokemonEvoluciones\">\r\n            <img className=\"CardPokemonEvoluciones__img\" src={imgSrc} alt=\"imagen pokemon\" />\r\n            <div className='CardPokemonEvoluciones__info'>\r\n                <h5>Pokedex Number: \"{id}\"</h5>\r\n                <h3 className=\"CardPokemonEvoluciones__name\">{name}</h3>\r\n                <p >{description}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CardPokemonEvoluciones;","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\n\r\nimport \"../../../styles/components/CardMovimientosPokemon.css\";\r\n\r\nfunction CardMovimientosPokemon({ pokeMove,local=0, EliminarPoder }) {\r\n    const [move, setMove] = useState({ id: \"\", power: \"0\", type: { name: \"\" } });\r\n\r\n    useEffect(() => {\r\n        const obtenerMove = async () => {\r\n            const data = await fetch(pokeMove.move.url)\r\n            const dataJSON = await data.json();\r\n            setMove(dataJSON);\r\n        }\r\n        obtenerMove();\r\n\r\n\r\n    }, [pokeMove, pokeMove.move.url])\r\n    return (\r\n        <div className='CardMovimientosPokemon__movimientos'>\r\n            <div className=\"flex-centerAll\">{move.id}</div>\r\n            <div className=\"flex-centerAll\">{move.name}</div>\r\n            <div className=\"flex-centerAll\">\r\n                <i className={obtenerClassType(move.type.name)}></i>\r\n            </div>\r\n            <div className=\"flex-centerAll\">{move.power}</div>\r\n            {/* <button className=\"flex-centerAll CardMovimientosPokemon__btn\" onClick={() => { EliminarPoder(pokeMove.move.name) }}><i className=\"fas fa-trash-alt\"></i></button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardMovimientosPokemon;","import CardMovimientosPokemon from \"./CardMovimientosPokemon\";\r\n\r\nexport const MostrarMovimientoPokemon = ({movesAll,EliminarPoder}) => {   \r\n    return (\r\n        movesAll.map((el, idx) => {\r\n            return <CardMovimientosPokemon key={idx} pokeMove={el} local={el.local} EliminarPoder={EliminarPoder}/>\r\n        })\r\n    )\r\n}\r\nexport default MostrarMovimientoPokemon;","const TAGS_VALIDATITION_FROM={\r\n    DESCRIPTION:{\r\n        IS_REQUIRED:\"El descripcion es obligatorio\",\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"El nombre es obligatorio\"\r\n    },\r\n    TYPE:{\r\n        IS_REQUIRED:\"La type es obligatorio\"\r\n    },\r\n    POWER:{\r\n        IS_REQUIRED:\"El power es obligatorio\"\r\n    },\r\n    IS_INTEGER:\"Tiene que ser un entero\",\r\n    IS_NUMBER:\"Tiene que ser un numero\",\r\n    IS_POSITIVE:\"Tiene que ser un positivo\",\r\n\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_move'\r\nconst Schema = Yup.object().shape({\r\n    description: Yup.string().required(TAGS_VALIDATITION_FROM.DESCRIPTION.IS_REQUIRED),\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED),\r\n    type: Yup.string().required(TAGS_VALIDATITION_FROM.TYPE.IS_REQUIRED),\r\n    power: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.POWER.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER)\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        description(){\r\n            return errors.description && (<div>{errors.description}</div>)\r\n        },\r\n        \r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        },\r\n        type(){\r\n            return errors.type && (<div>{errors.type}</div>)\r\n        },\r\n        power(){\r\n            return errors.power && (<div>{errors.power}</div>)\r\n        },\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/move/form_validation/schema_validation/move_schema\";\r\n//error\r\nimport errorHandle from \"../../form/move/form_validation/error_validation/move_errors\";\r\n\r\n//pokemon\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n\r\n//let initialValue = {id:\"\", move:{name: \"\"},type:{name:\"\"},power:\"\"};\r\n\r\nexport default function AddMoveForm({ setPokemon }) {\r\n    let initialValue = { id: 0, name: \"\", type: \"\", power: 0 };\r\n    const pokemon = UsePokemon();\r\n\r\n    const fnValidationForm = (v) => {\r\n        alert(JSON.stringify(v))\r\n        const { id, name, type, power } = v;\r\n        setPokemon({\r\n            ...pokemon,\r\n            moves: [{ local: 1, name: name, id: id, move: { name: name }, type: { name: type }, power: power }, ...pokemon.moves]\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Agregar Movimiento</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (<>\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"id\" className=\"input width-100 \" placeholder=\"id\" />\r\n                                {errorHandle(errors).id()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"type\" className=\"input width-100\" placeholder=\"type\" />\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"power\" className=\"input width-100\" placeholder=\"power\" />\r\n                                {errorHandle(errors).power()}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button className=\"btn btn-form\" type=\"submit\">Agregar Movimiento</button>\r\n                            </section>\r\n                        </Form>\r\n                        \r\n                    </>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport CardPokemonEvoluciones from \"../PokemonScreen/CardPokemonEvoluciones\"\r\nimport UsePokemon from '../../context/usePokemon'\r\nimport MostrarMovimientoPokemon from './MostrarMovimientosPokemon';\r\nimport \"../../../styles/components/MoviEvoPokemon.css\";\r\nimport AddMoveForm from './AddMoveForm';\r\n\r\n\r\nconst MoviEvoPokemon = ({ evoluciones, species, setPokemon }) => {\r\n    const pokemon = UsePokemon();\r\n    const [agregarMoves, setAgregarMoves] = useState(false);\r\n    const [MoviEvo, setMoviEvo] = useState('evo');\r\n    const movieEvoState = (msg) => setMoviEvo(msg === 'evo' ? 'mov' : 'evo');\r\n\r\n    const EliminarPoder = (movimientoName) => {\r\n        setPokemon({\r\n            ...pokemon,\r\n            moves: [...pokemon.moves.filter(el => el.move.name !== movimientoName)\r\n            ]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className='MoviEvoPokemon'>\r\n            {\r\n                MoviEvo === 'evo' &&\r\n                <>\r\n                    <ul className='MoviEvoPokemon__select'>\r\n                        <li className='GOLD MoviEvoPokemon__active'>Evolutions</li>\r\n                        <li onClick={() => { movieEvoState('evo') }}>Moves</li>\r\n                    </ul>\r\n                    <div className=\"MoviEvoPokemon__select__EvolucionesPokemon\">\r\n                        <div className=\"EvolucionesPokemon__container\">\r\n                            {evoluciones.id.map((el, idx) => {\r\n                                return <CardPokemonEvoluciones key={idx} name={evoluciones.name[idx]} description={evoluciones.description[idx]} url={'https://pokeapi.co/api/v2/pokemon/' + el} id={pokemon.id} />\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n            {\r\n                MoviEvo === 'mov' &&\r\n                <>\r\n                    <ul className='MoviEvoPokemon__select'>\r\n                        <li onClick={() => { movieEvoState('mov') }}>Evolutions</li>\r\n                        <li className='GOLD MoviEvoPokemon__active'>Moves</li>\r\n                    </ul>\r\n                    <div className=\"MoviEvoPokemon__Movimientos\">\r\n                        {agregarMoves === false && <>\r\n                            <ul className='MoviEvoPokemon__Movimientos__bar'>\r\n                                <li className='flex-centerAll'>ID </li>\r\n                                <li className='flex-centerAll'> &nbsp; &nbsp;NAME</li>\r\n                                <li className='flex-centerAll'>TYPE</li>\r\n                                <li className='flex-centerAll'>POWER</li>\r\n\r\n                            </ul>\r\n                            <div className='MoviEvoPokemon__Movimientos__list'>\r\n                                <MostrarMovimientoPokemon movesAll={pokemon.moves} EliminarPoder={EliminarPoder} />\r\n                            </div>\r\n                            <div className='MoviEvoPokemon__Movimientos__barBottom'></div>\r\n                            {/* <button className='btn btn-form' onClick={()=>setAgregarMoves(true)} >Agregar Movimientos</button> */}\r\n                        </>}\r\n                        {agregarMoves === true && <><AddMoveForm setPokemon={setPokemon} />\r\n                        <button className=\"btn btn-form\" type=\"submit\" onClick={() =>{setAgregarMoves(false)}}>Atras</button></>}\r\n                    </div>\r\n\r\n                </>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MoviEvoPokemon;","\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//styles\r\nimport \"../../styles/components/nav_principal.css\";\r\n\r\n// import Intro from '../audio/intro.mp3'\r\n// import { Howl, Howler } from \"howler\";\r\n// import { useState } from \"react\";\r\n\r\n\r\nfunction Nav() {\r\n\r\n    const [active, setActive] = useState(false)\r\n    function showLinks() {\r\n        if (active) {\r\n            setActive(false);\r\n        }\r\n        else {\r\n            setActive(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"nav_principal\">\r\n            <div className=\"nav_principal__icono\"></div>\r\n            <button onClick={showLinks} className=\"btn-hamburger\"><i id=\"hamburger\" className={active === false ? 'fas fa-bars' : 'fas fa-times'}></i></button>\r\n            <ul id=\"nav-links\" className={active === false ? 'nav_principal__list' : 'nav_principal__list active'} >\r\n                <li className=\"nav_principal__li\"><Link to=\"/home\" className=\"nav_principal__a\">Pokemones</Link></li>\r\n                <li className=\"nav_principal__li\"><Link to=\"/moves\" className=\"nav_principal__a\">Moves</Link></li>\r\n                <li className=\"nav_principal__li\"><Link to=\"/users\" className=\"nav_principal__a\">Users</Link></li>\r\n                <li className=\"nav_principal__li\"><Link to=\"/\" className=\"nav_principal__a\">Sign off</Link></li>\r\n                {/* <li className=\"nav_principal__li\"><button onClick={playMusic} type=\"button\" className=\"nav_principal__a nav_principal__btn-music\" ><i className=\"fas fa-music\"></i></button></li> */}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n//components\r\nimport AboutPokemon from '../presentational/PokemonScreen/AboutPokemon';\r\n//import PruebaModificarPokemon from '../presentational/PokemonScreen/PruebaModificarPokemon';\r\n/* import PruebaMovimientos from '../presentational/PokemonScreen/PruebaMovimientos'; */\r\n//context\r\nimport PokemonContext from \"../context/PokemonContext\";\r\n//initPokemon\r\nimport PokemonInitPokemon from \"../initializerJSON/pokemonInitJSON\";\r\n//style\r\nimport \"../../styles/components/PokemonScreen.css\";\r\nimport StatsPokemon from '../presentational/PokemonScreen/StatsPokemon';\r\nimport MoviEvoPokemon from '../presentational/PokemonScreen/MoviEvoPokemon';\r\nimport Nav from '../nav/nav_principal';\r\n// import { MyFormulario } from '../presentational/MyPokemonScreen/pruebaFormulario';\r\n// import AddMoveFormula from '../presentational/PokemonScreen/AddMoveForm';\r\n\r\nexport const PokemonScreen = () => {\r\n\r\n    const { id } = useParams();\r\n    const [pokemon, setPokemon] = useState(PokemonInitPokemon)\r\n    const [species, setSpecies] = useState({flavor_text_entries:[{flavor_text:''}]})\r\n\r\n    const [evoluciones, setEvoluciones] = useState({ name: [], id: [], description: [], });\r\n\r\n\r\n    const obtenerPokemon = async (id) => {\r\n        const data = await fetch('https://pokeapi.co/api/v2/pokemon/' + id)\r\n        const dataJSON = await data.json();\r\n        setPokemon(dataJSON);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let evolucionesNameArray = [];\r\n        let descriptionArray = [];\r\n\r\n        window.scrollTo(0, 0)  //Para volver al inicio de la pagina cuando hacen click\r\n\r\n        async function obtenerIdEvolutionPokemon() {\r\n            let i = 0;\r\n            let evolucionesIdArray = [];\r\n            let leng = evolucionesNameArray.length;\r\n            for (; i < leng; i++) {\r\n                let data = await fetch('https://pokeapi.co/api/v2/pokemon-species/' + evolucionesNameArray[i])\r\n                let dataJSON = await data.json();\r\n                evolucionesIdArray.push(dataJSON.id);\r\n                if (dataJSON.flavor_text_entries[0].flavor_text) {\r\n                    descriptionArray.push(dataJSON.flavor_text_entries[0].flavor_text);\r\n                }\r\n            }\r\n            setEvoluciones({\r\n                name: evolucionesNameArray,\r\n                id: evolucionesIdArray,\r\n                description: descriptionArray\r\n            });\r\n\r\n        }\r\n\r\n        async function obtenerNameEvolutionPokemon(id) {\r\n            let data = await fetch('https://pokeapi.co/api/v2/pokemon-species/' + id)\r\n            let dataJSON = await data.json();\r\n            setSpecies(dataJSON);\r\n            if (dataJSON.evolution_chain.url) {\r\n                data = await fetch(dataJSON.evolution_chain.url)\r\n                dataJSON = await data.json();\r\n                if (dataJSON.chain) {\r\n                    evolucionesNameArray.push(dataJSON.chain.species.name);\r\n                    if (dataJSON.chain.evolves_to[0]) {\r\n                        evolucionesNameArray.push(dataJSON.chain.evolves_to[0].species.name);\r\n                        if (dataJSON.chain.evolves_to[0].evolves_to[0]) {\r\n                            evolucionesNameArray.push(dataJSON.chain.evolves_to[0].evolves_to[0].species.name);\r\n                            if (dataJSON.chain.evolves_to[0].evolves_to[0].evolves_to[0]) {\r\n                                evolucionesNameArray.push(dataJSON.chain.evolves_to[0].evolves_to[0].evolves_to[0].species.name);\r\n                            }\r\n                        }\r\n                    }\r\n                    obtenerIdEvolutionPokemon();\r\n                }\r\n            }\r\n        }\r\n        obtenerPokemon(id);\r\n        obtenerNameEvolutionPokemon(id);\r\n    }, [id]);\r\n\r\n    return (  <>\r\n        <Nav />\r\n        <section className='PokemonScreen'>   \r\n\r\n            <PokemonContext.Provider value={pokemon}>\r\n                <AboutPokemon species = {species}/>\r\n                <StatsPokemon />\r\n                <MoviEvoPokemon evoluciones={evoluciones} species = {species} setPokemon={setPokemon}  /> \r\n                {/* <MyFormulario />   */}\r\n                {/* <AddMoveFormula setPokemon={setPokemon} /> */}\r\n                {/* <PruebaModificarPokemon setPokemon={setPokemon}/> */}\r\n                \r\n\r\n                {/* <PruebaMovimientos  setPokemon={setPokemon}/> */}\r\n                {/* <HeaderPokemon />\r\n            <AtaquesPokemon />\r\n            <EnergiaPokemon /> */}\r\n\r\n            </PokemonContext.Provider>\r\n\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonScreen;","import React from 'react';\r\n\r\n//components\r\n// import PaginaMoverNav from \"./PaginaMoverNav\";\r\n//style\r\nimport \"../../../styles/components/NavPokemonAll.css\";\r\nfunction NavPokemonAll({ offset, limit, setOffset, filtro, setFiltro, cantMaximaPokemon, cantPokemonFetch,page,setPage,setAgregarPokemon}) {\r\n    \r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n        setOffset(1);\r\n        setPage(1);\r\n    }\r\n    return (\r\n        <div className=\"NavPokemonAll\">\r\n{/* <<<<<<< HEAD\r\n        <button className='btn NavPokemonAll__btn' onClick={() => setAgregarPokemon(true)} >Agregar Pokemon</button>\r\n            <input className=\"NavPokemonAll__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Buscar Pokemon\" />\r\n======= */}\r\n        <button className='btn btn-add' onClick={() => setAgregarPokemon(true)} >Add Pokemon</button>\r\n            <input className=\"filter__input\" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search Pokemon\" />\r\n\r\n            {/* <PaginaMoverNav offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} /> */}\r\n        </div>\r\n    )\r\n}\r\nexport default NavPokemonAll;","export default __webpack_public_path__ + \"static/media/spinner5.94cd27f1.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\nimport pokemonInit from '../../initializerJSON/pokemonInitJSON';\r\n\r\n//style\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\nimport Spinner from '../../img/spinner5.gif';\r\nimport \"../../../styles/components/CardPokemon.css\"\r\n\r\nfunction CardPokemon({ name, url }) {\r\n  const [spinner, setSpinner] = useState(true);\r\n  let id = 1;\r\n  let arrayURL = url.split('/');\r\n  if (arrayURL[6]) {\r\n    id = arrayURL[6];\r\n  }\r\n  const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + id + \".svg\";\r\n  const [pokemon, setPokemon] = useState(pokemonInit)\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n    obtenerPokemon(id);\r\n  }, [id]);\r\n\r\n\r\n  const obtenerPokemon = async (id) => {\r\n    const data = await fetch('https://pokeapi.co/api/v2/pokemon/' + id)\r\n    const dataJSON = await data.json();\r\n    setPokemon(dataJSON);\r\n    setSpinner(false);\r\n  }\r\n\r\n  const spinnerOn = () => {\r\n    return (\r\n      <div className=\"flex-centerAll\">\r\n        <div className=\"spinner-card\">\r\n          <div className=\"spinner__fondo\"></div>\r\n          <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {spinner === true && spinnerOn()}\r\n      {spinner === false &&\r\n        <Link to={\"/pokemon/\" + id}>\r\n          <div className=\"contenedor1\">\r\n            <div className=\"contenedor2\">\r\n              <div className=\"CardPokemon\">\r\n                <img className=\"CardPokemon__img\" src={imgSrc} alt=\"imagen\" />\r\n                <h5 className=\"GOLD\">HI THERE! I'M </h5>\r\n                <h3 className=\"CardPokemon__name animate__animated animate__fadeIn\">\r\n                  <span className=\"MyPokemonScreenHeader__blink\">[</span> {name}{\" \"}\r\n                  <span className=\"MyPokemonScreenHeader__blink\">]</span>\r\n                </h3>\r\n                <div className=\"flex\">\r\n                  {pokemon.types.map((el, idx) => <i key={idx} className={obtenerClassType(el.type.name)}></i>)}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </Link>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardPokemon;","import CardPokemon from \"./CardPokemon\";\r\n\r\nexport const MostrarCard = ({ filtro, pokemonArray, offset }) => {\r\n    return (\r\n        pokemonArray.map((el, idx) => {\r\n            return <CardPokemon key={idx} name={el.name} url={el.url} />\r\n        })\r\n    )\r\n}\r\nexport default MostrarCard;","import React, { useEffect, useState } from 'react';\r\n//componetes\r\nimport MostrarCard from './MostrarCard';\r\n//style\r\nimport \"../../../styles/components/ContenedorPokemons.css\";\r\n\r\nfunction ContenedorPokemons({ offset, limit, pokemonAll, filtro, cantMaximaPokemon, setCantMaximaPokemon, cantPokemonFetch }) {\r\n    const [pokemonArray, setPokemonAllArray] = useState([{ name: '', url: '' }]);\r\n    //const [pokemonArrayFiltro, setPokemonAllArrayFiltro] = useState([{ name: '', url: '' }]);\r\n\r\n    useEffect(() => {\r\n        let i = offset - 1;\r\n        let auxArray = [];\r\n        let iterar;\r\n        if (pokemonAll.length > 0) {\r\n            if (filtro === \"\") {\r\n                iterar = offset + limit > cantPokemonFetch ? cantPokemonFetch - 1 : offset + limit - 1;\r\n                for (; i <= iterar; i++) {\r\n                    auxArray.push(pokemonAll[i]);\r\n                }\r\n                setPokemonAllArray(auxArray);\r\n            }\r\n            else {\r\n                let arrayFiltro = pokemonAll.filter(el => el.name.includes(filtro));\r\n                setCantMaximaPokemon(arrayFiltro.length);\r\n                iterar = offset + limit > arrayFiltro.length ? arrayFiltro.length - 1 : offset + limit - 1;\r\n                for (; i <= iterar; i++) {\r\n                    auxArray.push(arrayFiltro[i]);\r\n                }\r\n                setPokemonAllArray(auxArray);\r\n            }\r\n        }\r\n    }, [cantPokemonFetch, filtro, limit, offset, pokemonAll, setCantMaximaPokemon])\r\n\r\n\r\n    return (\r\n        <div className=\"ContenedorPokemons__container\">\r\n            {pokemonArray.length > 0 && <MostrarCard filtro={filtro} pokemonArray={pokemonArray} offset={offset} />}\r\n            {pokemonArray.length === 0 && <h5>No se encontro ningun pokemon con el nombre: {filtro}</h5>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContenedorPokemons;","const TAGS_VALIDATITION_FROM={\r\n    ID:{\r\n        IS_REQUIRED:\"El id es obligatorio\",\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"El nombre es obligatorio\"\r\n    },\r\n    TYPE:{\r\n        IS_REQUIRED:\"La type es obligatorio\"\r\n    },\r\n    DESCRIPTION:{\r\n        IS_REQUIRED:\"El description es obligatorio\"\r\n    },\r\n    IS_INTEGER:\"Tiene que ser un entero\",\r\n    IS_NUMBER:\"Tiene que ser un numero\",\r\n    IS_POSITIVE:\"Tiene que ser un positivo\",\r\n\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_pokemon';\r\nconst Schema = Yup.object().shape({\r\n    id: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.ID.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED),\r\n    type: Yup.string().required(TAGS_VALIDATITION_FROM.TYPE.IS_REQUIRED),\r\n    description: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.DESCRIPTION.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER)\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        id(){\r\n            return errors.id && (<div>{errors.id}</div>)\r\n        },\r\n        \r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        },\r\n        type(){\r\n            return errors.type && (<div>{errors.type}</div>)\r\n        },\r\n        description(){\r\n            return errors.description && (<div>{errors.description}</div>)\r\n        },\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/pokemon/form_validation/schema_validation/pokemon_schema\";\r\n//error\r\nimport errorHandle from \"../../form/pokemon/form_validation/error_validation/pokemon_errors\";\r\n\r\nexport default function AddPokemonAll() {\r\n    let initialValue = { id: 0, name: \"\", type: \"\", description: 0 };\r\n\r\n    const fnValidationForm = (v) => {\r\n        alert(JSON.stringify(v))\r\n      /*   const { id, name, type, description } = v; */\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add Pokemon</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"id\" className=\"input width-100\" placeholder=\"id\" />\r\n                                {errorHandle(errors).id()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"type\" className=\"input width-100\" placeholder=\"type\" />\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"description\" className=\"input width-100\" placeholder=\"description\" />\r\n                                {errorHandle(errors).description()}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button type=\"submit\" className=\"btn btn-form\">Add Pokemon</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useState,useEffect} from 'react';\r\n\r\nimport \"../../../styles/components/PaginaMoverNav.css\";\r\nfunction PaginaMoverNav({ offset, limit, setOffset, filtro, cantMaximaPokemon, cantPokemonFetch,page,setPage }) {\r\n    const [cantPage,setCantPage]= useState(1);\r\n    \r\n    useEffect(() => {\r\n        if(filtro===\"\"){\r\n            setCantPage(Math.ceil(cantPokemonFetch/(limit+1)));\r\n        }\r\n        else{\r\n            setCantPage(Math.ceil(cantMaximaPokemon/(limit+1)));\r\n\r\n        }\r\n    },[cantMaximaPokemon, cantPokemonFetch, filtro, limit])\r\n\r\n    function decrementarOffset() {\r\n        if (offset !== 1) {\r\n            setOffset(offset - limit - 1);\r\n            setPage(page-1);\r\n        }\r\n    }\r\n\r\n    function aumentarOffset() {\r\n        if (filtro === \"\") {\r\n            if (offset + limit < cantPokemonFetch) {\r\n                setOffset(offset + limit + 1);\r\n                setPage(page+1);\r\n            }\r\n        }\r\n        else{\r\n            if (offset + limit < cantMaximaPokemon) {\r\n                setOffset(offset + limit + 1);\r\n                setPage(page+1);\r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"PaginaMoverNav\">\r\n            <br/>\r\n            <button className=\"btn\" onClick={decrementarOffset}> atras</button>\r\n            <button className=\"btn\" onClick={aumentarOffset}> siguiente</button>\r\n            <h4>Página {page} de {cantPage}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginaMoverNav;","import React, { useEffect, useState } from 'react';\r\n//components\r\nimport NavPokemonAll from '../presentational/PokemonAllScreen/NavPokemonAll';\r\nimport ContenedorPokemons from \"../presentational/PokemonAllScreen/ContenedorPokemons\";\r\nimport AddPokemonAll from '../presentational/PokemonAllScreen/AddPokemonAll';\r\nimport PaginaMoverNav from '../presentational/PokemonAllScreen/PaginaMoverNav';\r\n//style\r\nimport \"../../styles/components/PokemonAllScreen.css\";\r\nimport Nav from '../nav/nav_principal';\r\n\r\n\r\nexport const PokemonAllScreen = () => {\r\n    const [offset, setOffset] = useState(1);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [pokemonAll, setPokemonAll] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const limit = 8;\r\n    const cantPokemonFetch = 300;\r\n    const [cantMaximaPokemon, setCantMaximaPokemon] = useState(30);\r\n    const [agregarPokemon, setAgregarPokemon] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const obtenerPokemons = async (id) => {\r\n            const data = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=\" + cantPokemonFetch + \"&offset=0\");\r\n            const dataJSON = await data.json();\r\n            setPokemonAll(dataJSON.results);\r\n        }\r\n        obtenerPokemons();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n\r\n            <div className=\"PokemonAllScreen\">\r\n                {agregarPokemon === false &&\r\n                    <>\r\n\r\n                        <NavPokemonAll offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} setFiltro={setFiltro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} setAgregarPokemon={setAgregarPokemon} />\r\n                        <ContenedorPokemons offset={offset} limit={limit} pokemonAll={pokemonAll} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} setCantMaximaPokemon={setCantMaximaPokemon} />\r\n                        <PaginaMoverNav offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} />\r\n                    </>\r\n                }\r\n                {agregarPokemon === true &&\r\n                    <>\r\n                        <AddPokemonAll pokemonAll={pokemonAll} setPokemonAll={setPokemonAll} />\r\n                        <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarPokemon(false) }}>Back</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React/* , { useState, useEffect } */ from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n/* import { obtenerClassType } from \"../visualData/Types\"; */\r\n//styles\r\nimport \"../../../styles/components/CardMovimientos.css\";\r\n\r\nfunction CardMovimiento({ pokeMove }) {\r\n    let id = 1;\r\n    let arrayURL = pokeMove.url.split('/');\r\n    if (arrayURL[6]) {\r\n        id = arrayURL[6];\r\n    }\r\n    return (\r\n        <Link className=\"text-decore-none\" to={\"/moves/\"+id}>\r\n        <li>{pokeMove.name}</li>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default CardMovimiento;","import React, { useEffect, useState } from 'react';\r\nimport CardMovimiento from \"./CardMovimiento\";\r\n//style\r\nimport \"../../../styles/components/MostrarMovimientos.css\";\r\n\r\nexport const MostrarMovimientos = ({ movesAll, filtro }) => {\r\n    const [movesActuales, setMovesActuales] = useState(movesAll);\r\n\r\n    useEffect(() => {\r\n        setMovesActuales([\r\n            ...movesAll.filter(el => el.name.includes(filtro))\r\n        ]);\r\n    }, [filtro, movesAll]);\r\n    return (\r\n        <div className=\"MostrarMovimientos\">\r\n            <ul className=\"MostrarMovimientos__ul\">\r\n            {movesActuales.map((el, idx) => {\r\n                return <CardMovimiento key={idx} pokeMove={el} />\r\n            })\r\n            }\r\n            {movesActuales.length === 0 && <h5>No se encontro ningun pokemon con el nombre: {filtro}</h5>}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MostrarMovimientos;","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/move/form_validation/schema_validation/move_schema\";\r\n//error\r\nimport errorHandle from \"../../form/move/form_validation/error_validation/move_errors\";\r\n//pokemon\r\n\r\nexport default function AddMoveAll({ setmovesAll,movesAll,setAgregarMoves }) {\r\n    let initialValue = { id: 0, name: \"\", type: \"\", power: 0 };\r\n\r\n    const fnValidationForm = (v) => { \r\n        alert(JSON.stringify(v))\r\n        const {id,name,type,power} =v;\r\n        setmovesAll([\r\n            {id:id,name:name,type:type,power:power,url:\"https://pokeapi.co/api/v2/move/\"+id},\r\n            ...movesAll\r\n        ]);\r\n        setAgregarMoves(false);\r\n    }\r\n    return (\r\n        <div className=\"AddMoveAll\">\r\n            <h3>Add Move</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"type\" className=\"input width-100\" placeholder=\"type\" />\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"power\" className=\"input width-100\" placeholder=\"power\" />\r\n                                {errorHandle(errors).power()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"description\" className=\"input width-100\" placeholder=\"description\" />\r\n                                {errorHandle(errors).description()}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button type=\"submit\" className=\"btn btn-form\">Save</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n//components\r\nimport MostrarMovimientos from '../presentational/MovimientosAllScreen/MostrarMovimientos';\r\nimport AddMoveForm from '../presentational/MovimientosAllScreen/AddMoveAll';\r\n//styles\r\nimport \"../../styles/components/MovimientosAllScreen.css\";\r\nimport Spinner from '../img/spinner5.gif';\r\nimport Nav from '../nav/nav_principal';\r\n\r\n\r\nexport const MovimientosAllScreen = () => {\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [movesAll, setmovesAll] = useState([]);\r\n    const cantMovesFetch = 826;\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [agregarMoves, setAgregarMoves] = useState(false);\r\n\r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerMovimientos = async (id) => {\r\n            const data = await fetch(\"https://pokeapi.co/api/v2/move/?offset=0&limit=\" + cantMovesFetch);\r\n            const dataJSON = await data.json();\r\n            setmovesAll(dataJSON.results);\r\n        }\r\n        obtenerMovimientos();\r\n        setSpinner(false);\r\n    }, [cantMovesFetch]);\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<>\r\n        <Nav />\r\n        <div className=\"MovimientosAllScreen \">\r\n            {agregarMoves === false &&\r\n                <>\r\n                    <div className=\"MovimientosAllScreen__filter\">\r\n                        <button className='btn btn-add' onClick={() => setAgregarMoves(true)} >Add moves</button>\r\n                        <input className=\"filter__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search Move\" />\r\n                    </div>\r\n                    {spinner === true && spinnerOn()}\r\n                    {spinner === false && <MostrarMovimientos movesAll={movesAll} filtro={filtro} />}\r\n                </>}\r\n            {agregarMoves === true && <>\r\n                <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n                    <AddMoveForm setmovesAll={setmovesAll} movesAll={movesAll}  />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarMoves(false) }}>Back</button>\r\n                </div>\r\n            </>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/PokeBall.0ae55d07.png\";","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//components\r\nimport { obtenerClassType } from \"../presentational/visualData/Types\";\r\nimport { useParams } from 'react-router';\r\nimport Spinner from '../img/spinner5.gif';\r\n\r\n//styles\r\nimport \"../../styles/components/MovimientoScreen.css\";\r\nimport Nav from '../nav/nav_principal';\r\n\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const MovimientoScreen = () => {\r\n    const { id } = useParams();\r\n    const [move, setMove] = useState({ id: \"\", power: \"0\", type: { name: \"\" } });\r\n    const [pagNext, setPagNext] = useState(0);\r\n    const [pagBack, setPagBack] = useState(0);\r\n    const [spinner, setSpinner] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerMove = async () => {\r\n            const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id);\r\n            const dataJSON = await data.json();\r\n            setMove(dataJSON);\r\n            setSpinner(false);\r\n        }\r\n        obtenerMove();\r\n\r\n        if (id > 1) {\r\n            setPagBack(parseInt(id) - 1);\r\n        }\r\n        if (id < 826) {\r\n            setPagNext(parseInt(id) + 1);\r\n        }\r\n    }, [id])\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const spinnerOff = () => {\r\n        return (\r\n            <div className=\"MovimientoScreen\">\r\n                <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n                <ul className=\"MovimientoScreen__ul\">\r\n                    <ul className=\"MovimientoScreen__ul__ul\">\r\n                        <li className=\"MovimientoScreen__li flex-align-center\">ID:</li>\r\n                        <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.id}</li>\r\n                    </ul>\r\n                    <ul className=\"MovimientoScreen__ul__ul\">\r\n                        <li className=\"MovimientoScreen__li flex-align-center\">Name:</li>\r\n                        <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.name}</li>\r\n                    </ul>\r\n                    <ul className=\"MovimientoScreen__ul__ul\">\r\n                        <li className=\"MovimientoScreen__li flex-align-center\">TYPE-NAME:</li>\r\n                        <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" ><i>{move.type.name}</i>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"MovimientoScreen__ul__ul\">\r\n                        <li className=\"MovimientoScreen__li flex-align-center\">TYPE:</li>\r\n                        <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >\r\n                            <i className={obtenerClassType(move.type.name)}></i>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"MovimientoScreen__ul__ul\">\r\n                        <li className=\"MovimientoScreen__li flex-align-center\">POWER:</li>\r\n                        <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.power}</li>\r\n                    </ul>\r\n                </ul>\r\n                <div>\r\n                    <Link className=\"text-decore-none\" to={\"/moves/\" + pagBack}><button className=\"btn\" > atras</button></Link>\r\n                    <Link className=\"text-decore-none\" to={\"/moves/\" + pagNext}>  <button className=\"btn\" > siguiente</button></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Nav />\r\n            {spinner === true && spinnerOn()}\r\n            {spinner === false && spinnerOff()}\r\n            <></>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default MovimientoScreen;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport pokeBall from '../img/PokeImgs/PokeBall.png'\r\n\r\nexport const Error504 = () => {\r\n    return (\r\n        <div className='Error504'>\r\n            <div>\r\n                <h1>ERROR 404</h1>\r\n                <h1>HAGA CLICK</h1>\r\n                <Link to={ '/home' }> <h1 className='Error504__aqui'>AQUI</h1> </Link>\r\n                <h1>PARA VOLVER ATRAS</h1>\r\n            </div>\r\n            <img src= {pokeBall} className='pokeBallBg' alt=\"Pokeball\" />\r\n        </div>\r\n    )\r\n}\r\n","const TAGS_VALIDATITION_FROM={\r\n    EMAIL:{\r\n        IS_REQUIRED:\"El email es obligatorio\"\r\n    },\r\n    PASS:{\r\n        IS_REQUIRED:\"La contraseña es obligatorio\"\r\n    },\r\n    IS_INTEGER:\"Tiene que ser un entero\",\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_login'\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string().required(TAGS_VALIDATITION_FROM.EMAIL.IS_REQUIRED),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        email(){\r\n            return errors.email && (<div>{errors.email}</div>)\r\n        }, \r\n        pass(){\r\n            return errors.pass && (<div>{errors.pass}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../form/login/form_validation/schema_validation/login_schema';\r\n//error\r\nimport errorHandle from '../form/login/form_validation/error_validation/login_errors';\r\nimport { useNavigate } from 'react-router-dom';\r\n//audio\r\n// import Audio from '../audio/audio';\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\n// import NavBurger from \"../nav/nav_prueba/nav\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    let initialValue = { email: \"\", pass: \"\" };\r\n    const navigate = useNavigate();\r\n\r\n    const fnValidationForm = (v) => {\r\n        alert('Bienvenido a PokeDev!');\r\n        navigate('/home');\r\n    }\r\n\r\n    const newUser = () => navigate('/newUser')\r\n\r\n    return (\r\n        \r\n        <div className='LoginScreen'>\r\n            {/* <NavBurger/> */}\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        \r\n                        <Form className='LoginScreen__form'>\r\n                            <h3>WELCOME TO <br/><br/> POKE DEV!</h3>\r\n                            <Field className=\"input input-big\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n\r\n                            <Field type=\"password\"  className=\"input input-big\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n\r\n                            <button className='btn LoginScreen__btndiv' type=\"submit\">Login</button>\r\n                            <button className='btn' type=\"button\" onClick={newUser}>New User</button>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n\r\n            <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n            {/* <Audio /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n","const TAGS_VALIDATITION_FROM={\r\n    EMAIL:{\r\n        IS_REQUIRED:\"El email es obligatorio\"\r\n    },\r\n    PASS:{\r\n        IS_REQUIRED:\"La password es obligatoria\"\r\n    },\r\n    REPASS:{\r\n        IS_REQUIRED:\"Reescriba su password\"\r\n    },\r\n    IS_INTEGER:\"Tiene que ser un entero\",\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_newUser'\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string().required(TAGS_VALIDATITION_FROM.EMAIL.IS_REQUIRED),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n    rePass: Yup.string().required(TAGS_VALIDATITION_FROM.REPASS.IS_REQUIRED),\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        email(){\r\n            return errors.email && (<div>{errors.email}</div>)\r\n        }, \r\n        pass(){\r\n            return errors.pass && (<div>{errors.pass}</div>)\r\n        },\r\n        rePass(){\r\n            return errors.rePass && (<div>{errors.rePass}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../form/newUser/form_validation/schema_validation/newUser_schema';\r\n//error\r\nimport errorHandle from '../form/newUser/form_validation/error_validation/newUser_errors';\r\nimport { useNavigate } from 'react-router-dom';\r\n//audio\r\n// import Audio from '../audio/audio';\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const NewUserScreen = () => {\r\n\r\n    let initialValue = { email: \"\", pass: \"\",rePass:\"\"};\r\n    const navigate = useNavigate();\r\n\r\n    const fnValidationForm = (v) => { \r\n        alert(JSON.stringify(v));\r\n        navigate('/home');\r\n    }\r\n\r\n    const goBack = () => navigate('/')\r\n\r\n    return (\r\n        <div className='NewUserScreen'>\r\n            <Formik \r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='NewUserScreen__form'>\r\n                                <h3>CREATE <br/> <br/> NEW USER</h3>\r\n                                <Field className=\"input input-big\" name=\"email\" placeholder=\"E-mail\" />\r\n                                {errorHandle(errors).email()}\r\n\r\n                                <Field type=\"password\" className=\"input input-big\" name=\"pass\" placeholder=\"Password\" />\r\n                                {errorHandle(errors).pass()}\r\n\r\n                                <Field type=\"password\" className=\"input input-big\" name=\"rePass\" placeholder=\"Rewrite your Pass\" />\r\n                                {errorHandle(errors).rePass()}\r\n\r\n                                <button className='btn' type=\"submit\">Create New User</button>\r\n                                <button className='btn NewUserScreen__btndiv' type=\"button\" onClick={goBack}>Go Back</button>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n            <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n            {/* <Audio/> */}\r\n        </div>\r\n    )\r\n}\r\n","import React/* , { useState, useEffect } */ from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n/* import { obtenerClassType } from \"../visualData/Types\"; */\r\n//styles\r\nimport \"../../../styles/components/CardUsers.css\";\r\n\r\nfunction CardUser({ user, id }) {\r\n    const idx=id+1\r\n /*    let img=\"UsuariosAllScreen__img UsuariosAllScreen__img\"+idx; */\r\n    return (\r\n        <Link className=\"text-decore-none\" to={\"/users/\" + id}>\r\n            <div className=\"UsuariosAllScreen__card\">\r\n                {/* <div className= {img} alt=\"entrenador\" /> */}\r\n                <img  className=\"UsuariosAllScreen__img\" src={process.env.PUBLIC_URL + `/entrenador/e${idx}.png`} alt=\"logo\" />\r\n                <h3>\r\n                    <span className=\"MyPokemonScreenHeader__blink \">[</span> {user.name}{\" \"}\r\n                    <span className=\"MyPokemonScreenHeader__blink\">]</span>\r\n                </h3>\r\n                {/* <img src={`./e1.png`} alt=\"Entrenador\"></img> */}\r\n                {/* <img src={require(`../../img/entrenador/e1.png`)}  alt=\"Entrenador\"/> */}\r\n               {/*  <img src={ `./assets/heroes/${ id }.jpg` } className=\"card-img\" alt={ superhero } /> */}\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default CardUser;","import React, { useEffect, useState } from 'react';\r\nimport CardUser from \"./CardUser\";\r\n//style\r\nimport \"../../../styles/components/MostrarUsers.css\";\r\nexport const MostrarUsers = ({ userAll, filtro }) => {\r\n    const [usuariosActuales, setUsuariosActuales] = useState(userAll);\r\n\r\n    useEffect(() => {\r\n        setUsuariosActuales([\r\n            ...userAll.filter(el => el.name.includes(filtro))\r\n        ]);\r\n    }, [filtro, userAll]);\r\n    return (\r\n        <div className=\"MostrarUsers\">\r\n            <ul className=\"MostrarUsers__ul\">\r\n            {usuariosActuales.map((el, idx) => {\r\n                return <CardUser key={idx} user={el}  id={idx}/>\r\n            })\r\n            }\r\n            {usuariosActuales.length === 0 && <h5>No se encontro ningun usuario con el nombre: {filtro}</h5>}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MostrarUsers;","const TAGS_VALIDATITION_FROM={\r\n    EMAIL:{\r\n        IS_REQUIRED:\"El email es obligatorio\"\r\n    },\r\n    PASS:{\r\n        IS_REQUIRED:\"La password es obligatoria\"\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"El nombre es obligatoria\"\r\n    },\r\n    IS_INTEGER:\"Tiene que ser un entero\",\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_newUser'\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED),\r\n    email: Yup.string().required(TAGS_VALIDATITION_FROM.EMAIL.IS_REQUIRED),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n    \r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        email(){\r\n            return errors.email && (<div>{errors.email}</div>)\r\n        }, \r\n        pass(){\r\n            return errors.pass && (<div>{errors.pass}</div>)\r\n        },\r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../../form/addUser/form_validation/schema_validation/addUser_schema';\r\n//error\r\nimport errorHandle from '../../form/addUser/form_validation/error_validation/addUser_errors';\r\n//style\r\nimport \"../../../styles/components/AddUserFromix.css\";\r\n\r\nexport const AddUserFromix = ({ setUserAll, userAll,setAgregarUsuario }) => {\r\n\r\n    let initialValue = { email: \"\", pass: \"\" };\r\n\r\n    const fnValidationForm = (v) => {\r\n        setUserAll([\r\n            ...userAll, v\r\n        ])\r\n        console.log(v);\r\n        setAgregarUsuario(false);\r\n    }\r\n\r\n    return (\r\n        <div className='AddUserFromixScreen'>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='AddUserFromixScreen__form'>\r\n                            <h3>CREATE NEW USER</h3>\r\n                            <br />\r\n                            <br />\r\n                            <Field className=\"input width-100\" name=\"name\" placeholder=\"Name\" />\r\n                            {errorHandle(errors).name()}\r\n                            <Field className=\"input width-100\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n                            <Field className=\"input width-100\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n                            <br/>\r\n                            <button className='btn btn-form' type=\"submit\">Create New User</button>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserFromix;","const userData = [\r\n    { \"email\": \"foo@foo.com\", \"name\": \"Ash\", \"pass\": \"foo123\" },\r\n    { \"email\": \"bar@bar.com\", \"name\": \"Misty\", \"pass\": \"bar123\" },\r\n    { \"email\": \"qux@qux.com\", \"name\": \"Brock\", \"pass\": \"qux123\" },\r\n];\r\n\r\nexport default userData;","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../img/spinner5.gif';\r\nimport { MostrarUsers } from \"../presentational/UsuariosAllScreen/MostrarUsers\";\r\nimport Nav from '../nav/nav_principal';\r\nimport AddUserFromix from '../presentational/UsuariosAllScreen/AddUserFromix'\r\n//mocks\r\nimport userInit from \"../usuario/mocks/usuarios_mocks\";\r\n//style\r\nimport \"../../styles/components/UsuariosAllScreen.css\";\r\n\r\nexport const UsuariosAllScreen = ({ users }) => {\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [userAll, setUserAll] = useState(userInit);\r\n    const [agregarUsuario, setAgregarUsuario] = useState(false);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n\r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        setSpinner(false);\r\n    }\r\n        , [])\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<>\r\n        <Nav />\r\n        <div className=\"MovimientosAllScreen \">\r\n            {agregarUsuario === false &&\r\n                <>\r\n                    <div className=\"MovimientosAllScreen__filter\">\r\n                        <button className='btn btn-add' onClick={() => setAgregarUsuario(true)} >Add User</button>\r\n                        <input className=\"filter__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search User\" />\r\n                    </div>\r\n                    {spinner === true && spinnerOn()}\r\n                    {spinner === false && <MostrarUsers userAll={userAll} filtro={filtro} />}\r\n                </>}\r\n            {agregarUsuario === true && <>\r\n                <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n                    <AddUserFromix setUserAll={setUserAll} userAll={userAll} setAgregarUsuario={setAgregarUsuario} />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarUsuario(false) }}>Back</button>\r\n                </div>\r\n            </>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UsuariosAllScreen;","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../../form/addUser/form_validation/schema_validation/addUser_schema';\r\n//error\r\nimport errorHandle from '../../form/addUser/form_validation/error_validation/addUser_errors';\r\n//style\r\nexport const EditUserFromix = ({ setUserAll, userAll ,setEditarUsuario}) => {\r\n\r\n    let initialValue = { name:\"\",email: \"\", pass: \"\" };\r\n    const fnValidationForm = (v) => {\r\n        alert(JSON.stringify(v))\r\n        setEditarUsuario(false)\r\n    }\r\n\r\n    return (\r\n        <div className='EditUserFromixScreen'>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='flex-column '>\r\n                            <h3>EDIT USER</h3>\r\n                            <br />\r\n                            <br />\r\n                            <Field className=\"input\" name=\"name\" placeholder=\"Name\" />\r\n                            {errorHandle(errors).name()}\r\n                            <Field className=\"input\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n                            <Field className=\"input\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n                            <br/>\r\n                            <button className='btn btn-form' type=\"submit\">Create New User</button>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUserFromix;","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n//componets\r\nimport Nav from '../nav/nav_principal';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//mocks\r\nimport userData from \"../usuario/mocks/usuarios_mocks\";\r\n//style\r\nimport \"../../styles/components/UsuarioScreen.css\";\r\nimport EditUserFromix from \"../presentational/UsuarioScreen/EditUserFromix\"\r\n\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const UsuarioScreen = () => {\r\n\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState(userData[id]);\r\n    const [editarUsuario, setEditarUsuario] = useState(false);\r\n\r\n\r\n    return (<>\r\n        <Nav />\r\n        <div className='UsuarioScreen'>\r\n        {editarUsuario === false &&<>\r\n                <div className='UsuarioScreen__Card'>\r\n                    <div className='UsuarioScreen__list'>\r\n                        <div className=\"UsuarioScreen__dato\">ID:</div>\r\n                        <div className=\"UsuarioScreen__dato\">{id}</div>\r\n                    </div>\r\n                    <div className='UsuarioScreen__list'>\r\n                        <div className=\"UsuarioScreen__dato\">Name:</div>\r\n                        <div className=\"UsuarioScreen__dato\">{user.name}</div>\r\n                    </div>\r\n                    <div className='UsuarioScreen__list'>\r\n                        <div className=\"UsuarioScreen__dato\">Email:</div>\r\n                        <div className=\"UsuarioScreen__dato\">{user.email}</div>\r\n                    </div>\r\n                    <div className='UsuarioScreen__list'>\r\n                        <div className=\"UsuarioScreen__dato\">Password:</div>\r\n                        <div className=\"UsuarioScreen__dato\">{user.pass}</div>\r\n                    </div>\r\n                </div>\r\n                <div className='flex-centerAll'>\r\n                    <Link to={\"/users/\"}><button className=\"btn\">BACK</button></Link>\r\n                    <button className=\"btn\" onClick={() => setEditarUsuario(true)}>EDIT</button>\r\n                    <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg UsuarioScreen__pokeball' />\r\n                </div>\r\n            </>}\r\n            {editarUsuario === true && <>\r\n                <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n                    <EditUserFromix setUser={setUser} user={user} setEditarUsuario={setEditarUsuario} />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setEditarUsuario(false) }}>Atras</button>\r\n                </div>\r\n            </>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UsuarioScreen;","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className='footer' >\r\n            <div>\r\n                <p>PokeDev</p>\r\n                <p>An app made it with <i className=\"fas fa-heart\"> </i> By :</p>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://www.linkedin.com/in/facundo-perez-agustin\"> <i className=\"fab fa-linkedin\"></i>&nbsp; Facundo Perez</a>\r\n                <a href='https://www.linkedin.com/in/artur-fruttero/'> <i className=\"fab fa-linkedin\"></i> &nbsp;Artur Fruttero </a>\r\n                <p> <i className=\"fas fa-stop\"></i> &nbsp;Jano Diaz</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import './styles/style.css'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\n//components\r\nimport { PokemonScreen } from './components/screens/PokemonScreen';\r\nimport { PokemonAllScreen } from './components/screens/PokemonAllScreen';\r\nimport { MovimientosAllScreen } from './components/screens/MovimientosAllScreen';\r\nimport MovimientosScreen from './components/screens/MovimientoScreen';\r\nimport { Error504 } from './components/screens/Error504';\r\nimport { LoginScreen } from './components/screens/LoginScreen';\r\nimport { NewUserScreen } from './components/screens/NewUserScreen';\r\nimport {UsuariosAllScreen} from './components/screens/UsuariosAllScreen';\r\nimport {UsuarioScreen} from './components/screens/UsuarioScreen';\r\nimport { Footer } from './components/footer/Footer';\r\n/* import Audio from \"./components/audio/audio\"; */\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes >\r\n          <Route path=\"/newUser\" element={<NewUserScreen />} />\r\n          <Route path=\"/users\" element={<UsuariosAllScreen />} />\r\n          <Route path=\"/users/:id\" element={<UsuarioScreen />} />\r\n          <Route path=\"/\" element={<LoginScreen />} />\r\n          <Route path=\"/home\" element={<PokemonAllScreen />} />\r\n          <Route path='/pokemon/:id' element={<PokemonScreen />} />\r\n          <Route path=\"/moves\" element={<MovimientosAllScreen />} />\r\n          <Route path=\"/moves/:id\" element={<MovimientosScreen />} />\r\n          <Route path=\"*\" element={<Error504 />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}