{"version":3,"sources":["components/initializerJSON/pokemonInitJSON.js","components/context/PokemonContext.js","components/context/usePokemon.js","components/presentational/visualData/Types.js","components/presentational/PokemonScreen/CardPokemonAbout.jsx","components/presentational/PokemonScreen/AboutPokemon.jsx","components/presentational/PokemonScreen/StatsPokemon.jsx","components/presentational/PokemonScreen/CardPokemonEvoluciones.jsx","components/presentational/PokemonScreen/CardMovimientosPokemon.jsx","components/presentational/PokemonScreen/MostrarMovimientosPokemon.jsx","components/form/move/tags_validation/tag_move.js","components/form/move/form_validation/schema_validation/move_schema.js","components/form/move/form_validation/error_validation/move_errors.js","components/presentational/PokemonScreen/AddMoveForm.jsx","components/presentational/PokemonScreen/MoviEvoPokemon.jsx","components/form/pokemon/tags_validation/tag_pokemon.js","components/form/pokemon/form_validation/schema_validation/pokemonEdit_schema.js","components/form/pokemon/form_validation/error_validation/pokemon_errors.js","components/presentational/PokemonScreen/EditPokemon.jsx","components/nav/nav_principal.jsx","components/screens/PokemonScreen.jsx","components/presentational/PokemonAllScreen/NavPokemonAll.jsx","components/img/spinner5.gif","components/presentational/PokemonAllScreen/CardPokemon.jsx","components/presentational/PokemonAllScreen/MostrarCard.jsx","components/presentational/PokemonAllScreen/ContenedorPokemons.jsx","components/form/pokemon/form_validation/schema_validation/pokemon_schema.js","components/presentational/PokemonAllScreen/AddPokemonAll.jsx","components/presentational/PokemonAllScreen/PaginaMoverNav.jsx","components/screens/PokemonAllScreen.jsx","components/presentational/MovimientosAllScreen/CardMovimiento.jsx","components/presentational/MovimientosAllScreen/MostrarMovimientos.jsx","components/presentational/MovimientosAllScreen/AddMoveAll.jsx","components/screens/MovimientosAllScreen.jsx","components/presentational/MovimientoScreen/EditMove.jsx","components/img/PokeImgs/PokeBall.png","components/screens/MovimientoScreen.jsx","components/screens/Error504.jsx","components/form/login/tags_validation/tag_login.js","components/form/login/form_validation/schema_validation/login_schema.js","components/form/login/form_validation/error_validation/login_errors.js","components/screens/LoginScreen.jsx","components/form/addUser/tags_validation/tag_newUser.js","components/form/addUser/form_validation/schema_validation/addUser_schema.js","components/form/addUser/form_validation/error_validation/addUser_errors.js","components/screens/NewUserScreen.jsx","components/presentational/UsuariosAllScreen/CardUser.jsx","components/presentational/UsuariosAllScreen/MostrarUsers.jsx","components/presentational/UsuariosAllScreen/AddUserFromix.jsx","components/screens/UsuariosAllScreen.jsx","components/form/addUser/form_validation/schema_validation/editUser_schema.js","components/presentational/UsuarioScreen/EditUserFromix.jsx","components/presentational/UsuarioScreen/HiredPokemon.jsx","components/presentational/UsuarioScreen/MostrarPokemones.jsx","components/screens/UsuarioScreen.jsx","components/footer/Footer.jsx","App.js","index.js"],"names":["pokemonInit","PokemonContext","createContext","UsePokemon","useContext","obtenerClassType","type","CardPokemonAbout","pokemon","imgSrc","id","className","src","alt","name","types","map","el","idx","AboutPokemon","species","flavor_text_entries","flavor_text","StatsPokemon","useState","longStats","greaterStat","may","stats","forEach","stat","base_stat","statBar","style","width","total","parseInt","sumarStats","CardPokemonEvoluciones","url","description","arrayURL","split","to","CardMovimientosPokemon","pokeMove","local","EliminarPoder","power","move","setMove","useEffect","obtenerMove","a","fetch","data","json","dataJSON","MostrarMovimientoPokemon","movesAll","TAGS_VALIDATITION_FROM","DESCRIPTION","IS_REQUIRED","NAME","TYPE","POWER","IS_INTEGER","IS_NUMBER","IS_POSITIVE","Schema","Yup","shape","required","positive","integer","errorHandle","errors","AddMoveForm","setPokemon","initialValues","validationSchema","onSubmit","v","moves","placeholder","MoviEvoPokemon","evoluciones","agregarMoves","setAgregarMoves","MoviEvo","setMoviEvo","movieEvoState","msg","new","onClick","movimientoName","filter","ID","HP","ATTACK","DEFENSE","SPECIAL_ATTACK","SPECIAL_DEFENSE","SPEED","hp","attack","defense","specialAttack","specialDefense","speed","EditPokemon","setEditarPokemon","body","axios","put","then","response","catch","error","Nav","active","setActive","route","storage","setStorage","localStorage","getItem","PokemonScreen","useParams","PokemonInitPokemon","editarPokemon","setSpecies","setEvoluciones","idUser","navigate","useNavigate","obtenerPokemon","evolucionesNameArray","descriptionArray","evolucionesIdArray","obtenerDescription","i","leng","length","push","idEvo","evolution_chain","chain","evolves_to","window","scrollTo","obtenerNameEvolutionPokemon","Provider","value","Swal","fire","title","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","isDenied","NavPokemonAll","offset","limit","setOffset","filtro","setFiltro","setPage","cantMaximaPokemon","cantPokemonFetch","page","setAgregarPokemon","onChange","evt","target","CardPokemon","spinner","setSpinner","Spinner","MostrarCard","pokemonArray","ContenedorPokemons","pokemonAll","setCantMaximaPokemon","setPokemonAllArray","iterar","auxArray","arrayFiltro","toUpperCase","includes","max","AddPokemonAll","post","as","PaginaMoverNav","cantPage","setCantPage","Math","ceil","PokemonAllScreen","setPokemonAll","agregarPokemon","setCantPokemonFetch","obtenerPokemons","results","obtenerCantMove","cant","CardMovimiento","MostrarMovimientos","movesActuales","setMovesActuales","AddMoveAll","MovimientosAllScreen","setmovesAll","obtenerMovimientos","EditMoveAll","setEditMoves","newMove","MovimientoScreen","pagNext","setPagNext","pagBack","setPagBack","editMoves","cantMoves","setCantMoves","pokeball","Error504","pokeBall","EMAIL","PASS","email","pass","LoginScreen","newUser","console","log","token","clear","setItem","NewUserScreen","goBack","CardUser","path","user","process","MostrarUsers","userAll","usuariosActuales","setUsuariosActuales","AddUserFromix","setAgregarUsuario","UsuariosAllScreen","users","setUserAll","agregarUsuario","obtenerUsers","EditUserFromix","setEditarUsuario","HiredPokemon","MostrarPokemones","pokemons","UsuarioScreen","setUser","editarUsuario","userId","setUserId","Footer","href","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35f7ac0.chunk.js","sourcesContent":["const pokemonInit={\r\n    \"abilities\": [\r\n        {\r\n            \"ability\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            },\r\n            \"is_hidden\": \"\",\r\n            \"slot\": 1\r\n        },\r\n        \r\n    ],\r\n    \"base_experience\": \"\",\r\n    \"forms\": [\r\n        {\r\n            \"name\": \"\",\r\n            \"url\": \"\"\r\n        }\r\n    ],\r\n    \"id\": 7,\r\n    \"is_default\": true,\r\n    \"location_area_encounters\": \"\",\r\n    \"moves\": [\r\n        {\r\n            \"move\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            },\r\n            \"version_group_details\": [\r\n                {\r\n                    \"level_learned_at\": 0,\r\n                    \"move_learn_method\": {\r\n                        \"name\": \"\",\r\n                        \"url\": \"\"\r\n                    },\r\n                    \"version_group\": {\r\n                        \"name\": \"\",\r\n                        \"url\": \"\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"name\": \"\",\r\n    \"order\": 0,\r\n    \"past_types\": [],\r\n    \"species\": {\r\n        \"name\": \"\",\r\n        \"url\": \"\"\r\n    },\r\n    \"stats\": [\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        },\r\n        {\r\n            \"base_stat\": 0,\r\n            \"effort\": 0,\r\n            \"stat\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        }\r\n    ],\r\n    \"types\": [\r\n        {\r\n            \"slot\": 1,\r\n            \"type\": {\r\n                \"name\": \"\",\r\n                \"url\": \"\"\r\n            }\r\n        }\r\n    ],\r\n};\r\nexport default pokemonInit;","import { createContext } from \"react\";\r\nimport pokemonInit from \"../initializerJSON/pokemonInitJSON\";\r\nconst PokemonContext= createContext(pokemonInit);\r\nexport default PokemonContext;","import { useContext } from 'react';\r\n//Contexto\r\nimport PokemonContext from './PokemonContext';\r\n\r\nexport function UsePokemon() {\r\n    return (\r\n        useContext(PokemonContext)\r\n    )\r\n}\r\n\r\nexport default UsePokemon;","export const obtenerClassType = (type) => {\r\n    switch (type) {\r\n        case 'fire': return 'type fas fa-fire';\r\n        case 'water': return 'type fas fa-tint';\r\n        case 'electric': return 'type fas fa-bolt';\r\n        case 'ground': return 'type fas fa-mountain';\r\n        case 'grass': return 'type fas fa-leaf';\r\n        case 'ghost': return 'type fas fa-ghost';\r\n        case 'flying': return 'type fas fa-feather-alt';\r\n        case 'bug': return 'type fas fa-bug';\r\n        case 'rock': return 'type fas fa-circle';\r\n        case 'fighting': return 'type fas fa-hand-rock';\r\n        case 'steel': return 'type fas fa-cog';\r\n        case 'dragon': return 'type fas fa-dragon';\r\n        case 'poison': return 'type fas fa-skull-crossbones';\r\n        case 'ice': return 'type fas fa-snowflake';\r\n        case 'normal': return 'type far fa-circle';\r\n        case 'psychic': return 'type fab fa-battle-net';\r\n        case 'fairy': return 'type fas fa-bahai';\r\n        case 'dark': return 'type fas fa-moon';\r\n        default: return '';\r\n        //falta hada fairy psychic normal dark\r\n    }\r\n}\r\nexport default obtenerClassType;","import React from 'react'\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\nimport \"../../../styles/components/CardPokemonAbout.css\"\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n\r\n\r\n\r\n\r\nexport const CardPokemonAbout = () => {\r\n\r\n  const pokemon = UsePokemon();\r\n  const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + pokemon.id + \".svg\";\r\n\r\n  return (\r\n    <div className=\"CardPokemonAbout\">\r\n      <div className=\"contenedor1\">\r\n        <div className=\"contenedor2\">\r\n          <div className=\"CardPokemon\">\r\n            <img className=\"CardPokemon__img\" src={imgSrc} alt=\"imagen\" />\r\n            <h5 className=\"CardPokemonAbout__GOLD\">HI THERE! I'M </h5>\r\n            <h3 className=\"CardPokemonAbout__CardPokemon__name animate__animated animate__fadeIn\">\r\n              <span className=\"CardPokemonAbout__MyPokemonScreenHeader__blink\">[</span> {pokemon.name}{\" \"}\r\n              <span className=\"CardPokemonAbout__MyPokemonScreenHeader__blink\">]</span>\r\n            </h3>\r\n            <div  className=\"flex\">\r\n            {pokemon.types.map((el, idx) => <i key={idx} className={obtenerClassType(el.type.name)}></i>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport UsePokemon from \"../../context/usePokemon\";\r\nimport { CardPokemonAbout } from './CardPokemonAbout';\r\nimport '../../../styles/components/pokeTypes.css'\r\n//import CardPokemon from '../PokemonAllScreen/CardPokemon';\r\nconst AboutPokemon = ({species} ) => {\r\n    const pokemon = UsePokemon();\r\n    return (\r\n        <div className=\"AboutPokemon\">\r\n\r\n            <CardPokemonAbout />\r\n            <div className='AboutPokemon__flex' >    \r\n                {/* <h5 className='GOLD'>INTRODUCTION</h5> */}\r\n                <h2>About Me</h2>\r\n                <hr className='AboutPokemon__hr'/>\r\n                <p>{species.flavor_text_entries[0].flavor_text}</p>\r\n                <p className='sign animate__animated animate__fadeIn '>Im {pokemon.name} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutPokemon;","import React, { useState } from 'react'\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n//import CardPokemon from '../PokemonAllScreen/CardPokemon';\r\nconst StatsPokemon = () => {\r\n    const pokemon = UsePokemon();\r\n\r\n\r\n    const [longStats, setLongStats] = useState({\r\n        'SPECIAL-ATTACK':'SPECIAL-ATTACK',\r\n        'SPECIAL-DEFENSE':'SPECIAL-DEFENSE'\r\n    })\r\n\r\n    // const onWindowsSizeChange =()=>{\r\n    //     window.addEventListener(\"resize\", window.screen.width > 400 ? setLongStats({\r\n    //             'SPECIAL-ATTACK':'SP-AT'}) );\r\n    // }\r\n\r\n    // useEffect(() => {\r\n        \r\n    // })\r\n\r\n    const sumarStats =() =>{\r\n\r\n        let total = 0;\r\n        pokemon.stats.forEach(stat => {\r\n            total += parseInt(stat.base_stat);\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const greaterStat = () => {\r\n        let may = 0;\r\n        pokemon.stats.forEach(stat => {\r\n            if (may < stat.base_stat) {\r\n                may = stat.base_stat\r\n            }\r\n        });\r\n        return may\r\n    }\r\n\r\n\r\n    let statBar = pokemon.stats.map((stat, idx) =>\r\n        <div key={idx} className='StatsPokemon__statBar' style={{ width: `${stat.base_stat * 100 / greaterStat()}%` }}>{/* {greaterStat()} */}</div>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"StatsPokemon\">\r\n            {/* \r\n            <h5 className='GOLD'>SOME STADISTICS</h5> */}\r\n            <h2>My Stats</h2>\r\n            <hr className='AboutPokemon__hr' />\r\n            <p>I'm a Freelancer Pokemon, living in the wild. Waiting for someone like you, who wants to be a pokemon master, also, i want to meet new people and win some experience, and maybe if we train a lot, EVOLVE! I don't have degrees or things like that, but i can show you my stats where you can see my true potential!   </p>\r\n\r\n            <div className='StatsPokemon__stats'>\r\n\r\n                <ul className='StatsPokemon__stats_left'>\r\n                    <li>HP:</li>\r\n                    <li>ATTACK</li>\r\n                    <li>DEFENSE</li>\r\n                    <li>{longStats['SPECIAL-ATTACK']}</li>\r\n                    <li>{longStats['SPECIAL-DEFENSE']}</li>\r\n                    <li>SPEED</li>\r\n                    <li>TOTAL</li>\r\n                </ul>\r\n                <div className='StatsPokemon__stats_center'>\r\n                    {statBar}\r\n                </div>\r\n                <ul className='StatsPokemon__stats_right' >\r\n                    <li>{pokemon.stats[0].base_stat}</li>\r\n                    <li>{pokemon.stats[1].base_stat}</li>\r\n                    <li>{pokemon.stats[2].base_stat}</li>\r\n                    <li>{pokemon.stats[3].base_stat}</li>\r\n                    <li>{pokemon.stats[4].base_stat}</li>\r\n                    <li>{pokemon.stats[5].base_stat}</li>\r\n                    <li>{sumarStats()}</li>\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsPokemon;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n//style\r\nimport \"../../../styles/components/CardPokemonEvoluciones.css\";\r\n\r\nfunction CardPokemonEvoluciones({ name, url, description }) {\r\n    let id = 1;\r\n    let arrayURL = url.split('/');\r\n    if (arrayURL[6]) {\r\n        id = arrayURL[6];\r\n    }\r\n    const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + id + \".svg\";\r\n\r\n    return (\r\n        <Link to={\"/pokemon/\"+id}>\r\n        <div className=\"CardPokemonEvoluciones\">\r\n            <img className=\"CardPokemonEvoluciones__img\" src={imgSrc} alt=\"imagen pokemon\" />\r\n            <div className='CardPokemonEvoluciones__info'>\r\n                <h5>Pokedex Number: \"{id}\"</h5>\r\n                <h3 className=\"CardPokemonEvoluciones__name\">{name}</h3>\r\n                <p >{description}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CardPokemonEvoluciones;","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\n\r\nimport \"../../../styles/components/CardMovimientosPokemon.css\";\r\n\r\nfunction CardMovimientosPokemon({ pokeMove,local=0, EliminarPoder }) {\r\n    const [move, setMove] = useState({ id: \"\", power: \"0\", type: { name: \"\" } });\r\n\r\n    useEffect(() => {\r\n        const obtenerMove = async () => {\r\n            const data = await fetch(pokeMove.move.url)\r\n            const dataJSON = await data.json();\r\n            setMove(dataJSON);\r\n        }\r\n        obtenerMove();\r\n\r\n\r\n    }, [pokeMove, pokeMove.move.url])\r\n    return (\r\n        <div className='CardMovimientosPokemon__movimientos'>\r\n            <div className=\"flex-centerAll\">{move.id}</div>\r\n            <div className=\"flex-centerAll\">{move.name}</div>\r\n            <div className=\"flex-centerAll\">\r\n                <i className={obtenerClassType(move.type.name)}></i>\r\n            </div>\r\n            <div className=\"flex-centerAll\">{move.power}</div>\r\n            {/* <button className=\"flex-centerAll CardMovimientosPokemon__btn\" onClick={() => { EliminarPoder(pokeMove.move.name) }}><i className=\"fas fa-trash-alt\"></i></button> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardMovimientosPokemon;","import CardMovimientosPokemon from \"./CardMovimientosPokemon\";\r\n\r\nexport const MostrarMovimientoPokemon = ({movesAll,EliminarPoder}) => {   \r\n    return (\r\n        movesAll.map((el, idx) => {\r\n            return <CardMovimientosPokemon key={idx} pokeMove={el} local={el.local} EliminarPoder={EliminarPoder}/>\r\n        })\r\n    )\r\n}\r\nexport default MostrarMovimientoPokemon;","const TAGS_VALIDATITION_FROM={\r\n    DESCRIPTION:{\r\n        IS_REQUIRED:\"Description is required\",\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"Name is required\"\r\n    },\r\n    TYPE:{\r\n        IS_REQUIRED:\"Type is required\"\r\n    },\r\n    POWER:{\r\n        IS_REQUIRED:\"Power is required\"\r\n    },\r\n    IS_INTEGER:\"Must be integer\",\r\n    IS_NUMBER:\"Must be a number\",\r\n    IS_POSITIVE:\"Must be positive\",\r\n\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_move'\r\nconst Schema = Yup.object().shape({\r\n    /* description: Yup.string().required(TAGS_VALIDATITION_FROM.DESCRIPTION.IS_REQUIRED), */\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED),\r\n    type: Yup.string().required(TAGS_VALIDATITION_FROM.TYPE.IS_REQUIRED),\r\n    power: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.POWER.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER)\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        description(){\r\n            return errors.description && (<div>{errors.description}</div>)\r\n        },\r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        },\r\n        type(){\r\n            return errors.type && (<div>{errors.type}</div>)\r\n        },\r\n        power(){\r\n            return errors.power && (<div>{errors.power}</div>)\r\n        },\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/move/form_validation/schema_validation/move_schema\";\r\n//error\r\nimport errorHandle from \"../../form/move/form_validation/error_validation/move_errors\";\r\n\r\n//pokemon\r\nimport UsePokemon from \"../../context/usePokemon\";\r\n\r\n//let initialValue = {id:\"\", move:{name: \"\"},type:{name:\"\"},power:\"\"};\r\n\r\nexport default function AddMoveForm({ setPokemon }) {\r\n    let initialValue = { id: 0, name: \"\", type: \"\", power: 0 };\r\n    const pokemon = UsePokemon();\r\n\r\n    const fnValidationForm = (v) => {\r\n        const { id, name, type, power } = v;\r\n        setPokemon({\r\n            ...pokemon,\r\n            moves: [{ local: 1, name: name, id: id, move: { name: name }, type: { name: type }, power: power }, ...pokemon.moves]\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Agregar Movimiento</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (<>\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"id\" className=\"input width-100 \" placeholder=\"id\" />\r\n                                {errorHandle(errors).id()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"type\" className=\"input width-100\" placeholder=\"type\" />\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"power\" className=\"input width-100\" placeholder=\"power\" />\r\n                                {errorHandle(errors).power()}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button className=\"btn btn-form\" type=\"submit\">Agregar Movimiento</button>\r\n                            </section>\r\n                        </Form>\r\n                        \r\n                    </>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport CardPokemonEvoluciones from \"../PokemonScreen/CardPokemonEvoluciones\"\r\nimport UsePokemon from '../../context/usePokemon'\r\nimport MostrarMovimientoPokemon from './MostrarMovimientosPokemon';\r\nimport \"../../../styles/components/MoviEvoPokemon.css\";\r\nimport AddMoveForm from './AddMoveForm';\r\n\r\n\r\nconst MoviEvoPokemon = ({ evoluciones, species, setPokemon }) => {\r\n    const pokemon = UsePokemon();\r\n    const [agregarMoves, setAgregarMoves] = useState(false);\r\n    const [MoviEvo, setMoviEvo] = useState('evo');\r\n    const movieEvoState = (msg) => setMoviEvo(msg === 'evo' ? 'mov' : 'evo');\r\n\r\n    const EliminarPoder = (movimientoName) => {\r\n        setPokemon({\r\n            ...pokemon,\r\n            moves: [...pokemon.moves.filter(el => el.move.name !== movimientoName)\r\n            ]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>{!pokemon.new &&\r\n            <section className='MoviEvoPokemon'>\r\n                {\r\n                    MoviEvo === 'evo' &&\r\n                    <>\r\n                        <ul className='MoviEvoPokemon__select'>\r\n                            <li className='GOLD MoviEvoPokemon__active'>Evolutions</li>\r\n                            <li onClick={() => { movieEvoState('evo') }}>Moves</li>\r\n                        </ul>\r\n                        <div className=\"MoviEvoPokemon__select__EvolucionesPokemon\">\r\n                            <div className=\"EvolucionesPokemon__container\">\r\n                                {evoluciones.id.map((el, idx) => {\r\n                                    return <CardPokemonEvoluciones key={idx} name={evoluciones.name[idx]} description={evoluciones.description[idx]} url={'https://pokeapi.co/api/v2/pokemon/' + el} id={pokemon.id} />\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                {\r\n                    MoviEvo === 'mov' &&\r\n                    <>\r\n                        <ul className='MoviEvoPokemon__select'>\r\n                            <li onClick={() => { movieEvoState('mov') }}>Evolutions</li>\r\n                            <li className='GOLD MoviEvoPokemon__active'>Moves</li>\r\n                        </ul>\r\n                        <div className=\"MoviEvoPokemon__Movimientos\">\r\n                            {agregarMoves === false && <>\r\n                                <ul className='MoviEvoPokemon__Movimientos__bar'>\r\n                                    <li className='flex-centerAll'>ID </li>\r\n                                    <li className='flex-centerAll'> &nbsp; &nbsp;NAME</li>\r\n                                    <li className='flex-centerAll'>TYPE</li>\r\n                                    <li className='flex-centerAll'>PW</li>\r\n\r\n                                </ul>\r\n                                <div className='MoviEvoPokemon__Movimientos__list'>\r\n                                    <MostrarMovimientoPokemon movesAll={pokemon.moves} EliminarPoder={EliminarPoder} />\r\n                                </div>\r\n                                <div className='MoviEvoPokemon__Movimientos__barBottom'></div>\r\n                                {/* <button className='btn btn-form' onClick={()=>setAgregarMoves(true)} >Agregar Movimientos</button> */}\r\n                            </>}\r\n                            {agregarMoves === true && <><AddMoveForm setPokemon={setPokemon} />\r\n                                <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarMoves(false) }}>Atras</button></>}\r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n            </section>\r\n        }</>\r\n    )\r\n}\r\n\r\nexport default MoviEvoPokemon;","const TAGS_VALIDATITION_FROM={\r\n    ID:{\r\n        IS_REQUIRED:\"Id is required\",\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"Name is required\"\r\n    },\r\n    TYPE:{\r\n        IS_REQUIRED:\"Type required\"\r\n    },\r\n    DESCRIPTION:{\r\n        IS_REQUIRED:\"Description is required\"\r\n    },\r\n\r\n    HP:{\r\n        IS_REQUIRED:\"Hp is required\"\r\n    },\r\n    ATTACK:{\r\n        IS_REQUIRED:\"Attack is required\"\r\n    },\r\n    DEFENSE:{\r\n        IS_REQUIRED:\"Defense is required\"\r\n    },\r\n    SPECIAL_ATTACK:{\r\n        IS_REQUIRED:\"SpecialAttack is required\"\r\n    },\r\n    SPECIAL_DEFENSE:{\r\n        IS_REQUIRED:\"SpecialDefense is required\"\r\n    },\r\n    SPEED:{\r\n        IS_REQUIRED:\"Speed is required\"\r\n    },\r\n    \r\n    IS_INTEGER:\"Must be integer\",\r\n    IS_NUMBER:\"Must be a number\",\r\n    IS_POSITIVE:\"Must be positive\",\r\n\r\n\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_pokemon';\r\nconst Schema = Yup.object().shape({\r\n    description: Yup.string().required(TAGS_VALIDATITION_FROM.DESCRIPTION.IS_REQUIRED),\r\n    hp: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.HP.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    attack: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.ATTACK.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    defense: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.DEFENSE.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    specialAttack: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPECIAL_ATTACK.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    specialDefense: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPECIAL_DEFENSE.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    speed: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPEED.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER)\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        },\r\n        type(){\r\n            return errors.type && (<div>{errors.type}</div>)\r\n        },\r\n        description(){\r\n            return errors.description && (<div>{errors.description}</div>)\r\n        },\r\n        hp(){\r\n            return errors.hp && (<div>{errors.hp}</div>)\r\n        },\r\n        attack(){\r\n            return errors.attack && (<div>{errors.attack}</div>)\r\n        },\r\n        defense(){\r\n            return errors.defense && (<div>{errors.defense}</div>)\r\n        },\r\n        specialAttack(){\r\n            return errors.specialAttack && (<div>{errors.specialAttack}</div>)\r\n        },\r\n        specialDefense(){\r\n            return errors.specialDefense && (<div>{errors.specialDefense}</div>)\r\n        },\r\n        speed(){\r\n            return errors.speed && (<div>{errors.speed}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\nimport axios from \"axios\";\r\n//Schema\r\nimport Schema from \"../../form/pokemon/form_validation/schema_validation/pokemonEdit_schema\";\r\n//error\r\nimport errorHandle from \"../../form/pokemon/form_validation/error_validation/pokemon_errors\";\r\n\r\nexport default function EditPokemon({id,setEditarPokemon}) {\r\n    let initialValue = { description: \"\",hp:\"\",attack:\"\",defense:\"\",specialAttack:\"\",specialDefense:\"\",speed:\"\" };\r\n\r\n    const fnValidationForm = (v) => {\r\n        let body={\r\n            id,\r\n            ...v\r\n        }\r\n        axios.put('https://back-poke.herokuapp.com/editpokemon', body)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setEditarPokemon(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Edit Pokemon</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"description\" className=\"input width-100\" placeholder=\"description\" />\r\n                                {errorHandle(errors).description()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"hp\" className=\"input width-100\" placeholder=\"hp\" />\r\n                                {errorHandle(errors).hp()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"attack\" className=\"input width-100\" placeholder=\"attack\" />\r\n                                {errorHandle(errors).attack()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"defense\" className=\"input width-100\" placeholder=\"defense\" />\r\n                                {errorHandle(errors).defense()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"specialAttack\" className=\"input width-100\" placeholder=\"special attack\" />\r\n                                {errorHandle(errors).specialAttack()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"specialDefense\" className=\"input width-100\" placeholder=\"special defense\" />\r\n                                {errorHandle(errors).specialDefense()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"speed\" className=\"input width-100\" placeholder=\"speed\" />\r\n                                {errorHandle(errors).speed()}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button type=\"submit\" className=\"btn btn-form\">Save Pokemon</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//styles\r\nimport \"../../styles/components/nav_principal.css\";\r\n\r\n// import Intro from '../audio/intro.mp3'\r\n// import { Howl, Howler } from \"howler\";\r\n// import { useState } from \"react\";\r\n\r\n\r\nfunction Nav() {\r\n\r\n    const [active, setActive] = useState(false)\r\n    function showLinks() {\r\n        if (active) {\r\n            setActive(false);\r\n        }\r\n        else {\r\n            setActive(true);\r\n        }\r\n    }\r\n\r\n    const [storage, setStorage] = useState({\r\n        name: '',\r\n        route: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        let name = localStorage.getItem('user');\r\n        let route = `/users/${localStorage.getItem('id')}`\r\n        setStorage({\r\n            name: name,\r\n            route:route\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <nav className=\"nav_principal\">\r\n            <div className=\"nav_principal__icono\"></div>\r\n            <button onClick={showLinks} className=\"btn-hamburger\"><i id=\"hamburger\" className={active === false ? 'fas fa-bars' : 'fas fa-times'}></i></button>\r\n            <ul id=\"nav-links\" className={active === false ? 'nav_principal__list' : 'nav_principal__list active'} >\r\n                <li className=\"nav_principal__li\"><Link to=\"/home\" className=\"nav_principal__a\">Pokemons</Link></li>\r\n                <li className=\"nav_principal__li\"><Link to=\"/moves\" className=\"nav_principal__a\">Moves</Link></li>\r\n                <li className=\"nav_principal__li\"><Link to=\"/users\" className=\"nav_principal__a\">Users</Link></li>\r\n                <Link to= {storage.route} className=\"nav_principal__a\">{storage.name}</Link>\r\n                <li className=\"nav_principal__li\"><Link to=\"/\" className=\"nav_principal__a\">Sign off</Link></li>\r\n                {/* <li className=\"nav_principal__li\"><button onClick={playMusic} type=\"button\" className=\"nav_principal__a nav_principal__btn-music\" ><i className=\"fas fa-music\"></i></button></li> */}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\n//components\r\nimport AboutPokemon from '../presentational/PokemonScreen/AboutPokemon';\r\n//import PruebaModificarPokemon from '../presentational/PokemonScreen/PruebaModificarPokemon';\r\n/* import PruebaMovimientos from '../presentational/PokemonScreen/PruebaMovimientos'; */\r\n//context\r\nimport PokemonContext from \"../context/PokemonContext\";\r\n//initPokemon\r\nimport PokemonInitPokemon from \"../initializerJSON/pokemonInitJSON\";\r\n//style\r\nimport \"../../styles/components/PokemonScreen.css\";\r\nimport StatsPokemon from '../presentational/PokemonScreen/StatsPokemon';\r\nimport MoviEvoPokemon from '../presentational/PokemonScreen/MoviEvoPokemon';\r\nimport EditPokemon from '../presentational/PokemonScreen/EditPokemon';\r\nimport Nav from '../nav/nav_principal';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { MyFormulario } from '../presentational/MyPokemonScreen/pruebaFormulario';\r\n// import AddMoveFormula from '../presentational/PokemonScreen/AddMoveForm';\r\n\r\n\r\n\r\nexport const PokemonScreen = () => {\r\n\r\n    const { id } = useParams();\r\n    const [pokemon, setPokemon] = useState(PokemonInitPokemon)\r\n    const [editarPokemon, setEditarPokemon] = useState(false);\r\n    const [species, setSpecies] = useState({ flavor_text_entries: [{ flavor_text: '' }] })\r\n\r\n    const [evoluciones, setEvoluciones] = useState({ name: [], id: [], description: [], });\r\n    const [storage, setStorage] = useState({\r\n        name: '',\r\n        idUser: ''\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const obtenerPokemon = async (id) => {\r\n        /* const data = await fetch('https://pokeapi.co/api/v2/pokemon/' + id) */\r\n        const data = await fetch('https://back-poke.herokuapp.com/pokemonOne/' + id)\r\n        const dataJSON = await data.json();\r\n        setPokemon(dataJSON);\r\n    }\r\n\r\n    const Contratar = () => {\r\n        Swal.fire({\r\n            title: `Do you want to contrait ${pokemon.name}`,\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Recruit',\r\n            denyButtonText: `Don't recruit`,\r\n        }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                let body = {\r\n                    id: id,\r\n                    idUser: storage.idUser\r\n                }\r\n                \r\n                axios.put('https://back-poke.herokuapp.com/user/hirepokemon/', body)\r\n                    .then(function (response) {\r\n                    })\r\n                    .catch(function (error) {\r\n                    });\r\n                Swal.fire(`${pokemon.name} is recruited!`, '', 'success')\r\n                navigate('/users/' + storage.idUser)\r\n            } else if (result.isDenied) {\r\n                Swal.fire(`Oh! poor ${pokemon.name}!`, '', 'error')\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        let evolucionesNameArray = [];\r\n        let descriptionArray = [];\r\n        let evolucionesIdArray = [];\r\n\r\n        let name = localStorage.getItem('user');\r\n        let idUser = localStorage.getItem('id');\r\n        setStorage({\r\n            name: name,\r\n            idUser: idUser\r\n        })\r\n\r\n        window.scrollTo(0, 0)  //Para volver al inicio de la pagina cuando hacen click\r\n\r\n        async function obtenerDescription() {\r\n            let i = 0;\r\n\r\n            let leng = evolucionesNameArray.length;\r\n            for (; i < leng; i++) {\r\n                /*  let data = await fetch('https://pokeapi.co/api/v2/pokemon-species/' + evolucionesIdArray[i]) */\r\n                let data = await fetch('https://back-poke.herokuapp.com/specieOne/' + evolucionesIdArray[i]);\r\n                let dataJSON = await data.json();\r\n                if (dataJSON.flavor_text_entries[0].flavor_text) {\r\n                    descriptionArray.push(dataJSON.flavor_text_entries[0].flavor_text);\r\n                }\r\n            }\r\n            setEvoluciones({\r\n                name: evolucionesNameArray,\r\n                id: evolucionesIdArray,\r\n                description: descriptionArray\r\n            });\r\n        }\r\n        async function obtenerNameEvolutionPokemon(id) {\r\n            let idEvo = 0;\r\n            let data = await fetch('https://back-poke.herokuapp.com/specieOne/' + id)\r\n            let dataJSON = await data.json();\r\n            setSpecies(dataJSON);\r\n            if (dataJSON.evolution_chain.url) {\r\n                let arrayURL = dataJSON.evolution_chain.url.split('/');\r\n                if (arrayURL[6]) {\r\n                    idEvo = arrayURL[6];\r\n                }\r\n                /* data = await fetch(dataJSON.evolution_chain.url) */\r\n                let data = await fetch('https://back-poke.herokuapp.com/evolvesOne/' + idEvo)\r\n                dataJSON = await data.json();\r\n                if (dataJSON.chain) {\r\n                    evolucionesNameArray.push(dataJSON.chain.species.name);\r\n                    arrayURL = dataJSON.chain.species.url.split('/');\r\n                    if (arrayURL[6]) {\r\n                        idEvo = arrayURL[6];\r\n                        evolucionesIdArray.push(idEvo);\r\n                    }\r\n                    if (dataJSON.chain.evolves_to[0]) {\r\n                        evolucionesNameArray.push(dataJSON.chain.evolves_to[0].species.name);\r\n                        arrayURL = dataJSON.chain.evolves_to[0].species.url.split('/');\r\n                        if (arrayURL[6]) {\r\n                            idEvo = arrayURL[6];\r\n                            evolucionesIdArray.push(idEvo);\r\n                        }\r\n                        if (dataJSON.chain.evolves_to[0].evolves_to[0]) {\r\n                            evolucionesNameArray.push(dataJSON.chain.evolves_to[0].evolves_to[0].species.name);\r\n                            arrayURL = dataJSON.chain.evolves_to[0].evolves_to[0].species.url.split('/');\r\n                            if (arrayURL[6]) {\r\n                                idEvo = arrayURL[6];\r\n                                evolucionesIdArray.push(idEvo);\r\n                            }\r\n                            if (dataJSON.chain.evolves_to[0].evolves_to[0].evolves_to[0]) {\r\n                                evolucionesNameArray.push(dataJSON.chain.evolves_to[0].evolves_to[0].evolves_to[0].species.name);\r\n                                arrayURL = dataJSON.chain.evolves_to[0].evolves_to[0].evolves_to[0].species.url.split('/');\r\n                                if (arrayURL[6]) {\r\n                                    idEvo = arrayURL[6];\r\n                                    evolucionesIdArray.push(idEvo);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    obtenerDescription();\r\n                }\r\n            }\r\n        }\r\n        obtenerPokemon(id);\r\n        obtenerNameEvolutionPokemon(id);\r\n    }, [id, editarPokemon]);\r\n\r\n    return (<>\r\n        <Nav />\r\n        <section className='PokemonScreen'>\r\n            {editarPokemon === false &&\r\n                <>\r\n                    <PokemonContext.Provider value={pokemon}>\r\n                        <AboutPokemon species={species} />\r\n                        <StatsPokemon />\r\n                        <MoviEvoPokemon evoluciones={evoluciones} species={species} setPokemon={setPokemon} />\r\n                        {/* <MyFormulario />   */}\r\n                        {/* <AddMoveFormula setPokemon={setPokemon} /> */}\r\n                        {/* <PruebaModificarPokemon setPokemon={setPokemon}/> */}\r\n\r\n\r\n                        {/* <PruebaMovimientos  setPokemon={setPokemon}/> */}\r\n                        {/* <HeaderPokemon />\r\n            <AtaquesPokemon />\r\n            <EnergiaPokemon /> */}\r\n                        <button className='btn btn-form' onClick={() => setEditarPokemon(true)} >Edit Pokemon</button>\r\n                        <button className='btn btn-form' onClick={() => Contratar()} >Pokemon Recruit</button>\r\n                    </PokemonContext.Provider>\r\n                </>}\r\n            {editarPokemon === true &&\r\n                <>\r\n                    <EditPokemon id={id} setEditarPokemon={setEditarPokemon} />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setEditarPokemon(false) }}>Back</button>\r\n                </>\r\n            }\r\n        </section>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PokemonScreen;","import React from 'react';\r\n\r\n//components\r\n// import PaginaMoverNav from \"./PaginaMoverNav\";\r\n//style\r\nimport \"../../../styles/components/NavPokemonAll.css\";\r\nfunction NavPokemonAll({ offset, limit, setOffset, filtro, setFiltro, cantMaximaPokemon, cantPokemonFetch,page,setPage,setAgregarPokemon}) {\r\n    \r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n        setOffset(1);\r\n        setPage(1);\r\n    }\r\n    return (\r\n        <div className=\"NavPokemonAll\">\r\n{/* <<<<<<< HEAD\r\n        <button className='btn NavPokemonAll__btn' onClick={() => setAgregarPokemon(true)} >Agregar Pokemon</button>\r\n            <input className=\"NavPokemonAll__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Buscar Pokemon\" />\r\n======= */}\r\n        <button className='btn btn-add' onClick={() => setAgregarPokemon(true)} >Recommend Pokemon</button>\r\n            <input className=\"filter__input\" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search Pokemon\" />\r\n\r\n            {/* <PaginaMoverNav offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} /> */}\r\n        </div>\r\n    )\r\n}\r\nexport default NavPokemonAll;","export default __webpack_public_path__ + \"static/media/spinner5.94cd27f1.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\nimport pokemonInit from '../../initializerJSON/pokemonInitJSON';\r\n\r\n//style\r\nimport { obtenerClassType } from \"../visualData/Types\"\r\nimport Spinner from '../../img/spinner5.gif';\r\nimport \"../../../styles/components/CardPokemon.css\"\r\n\r\nfunction CardPokemon({ name, url }) {\r\n  const [spinner, setSpinner] = useState(true);\r\n  let id = 1;\r\n  let arrayURL = url.split('/');\r\n  if (arrayURL[6]) {\r\n    id = arrayURL[6];\r\n  }\r\n  const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + id + \".svg\";\r\n  const [pokemon, setPokemon] = useState(pokemonInit)\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n    obtenerPokemon(id);\r\n  }, [id]);\r\n\r\n\r\n  const obtenerPokemon = async (id) => {\r\n    const data = await fetch('https://back-poke.herokuapp.com/pokemonOne/' + id)\r\n    const dataJSON = await data.json();\r\n    setPokemon(dataJSON);\r\n    setSpinner(false);\r\n  }\r\n\r\n  const spinnerOn = () => {\r\n    return (\r\n      <div className=\"flex-centerAll\">\r\n        <div className=\"spinner-card\">\r\n          <div className=\"spinner__fondo\"></div>\r\n          <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {spinner === true && spinnerOn()}\r\n      {spinner === false &&\r\n        <Link to={\"/pokemon/\" + id}>\r\n          <div className=\"contenedor1 \">\r\n            <div className=\"contenedor2 \">\r\n              <div className=\"CardPokemon\">\r\n                <img className=\"CardPokemon__img\" src={imgSrc} alt=\"imagen\" />\r\n                <h5 className=\"GOLD\">HI THERE! I'M </h5>\r\n                <h3 className=\"CardPokemon__name animate__animated animate__fadeIn\">\r\n                  <span className=\"MyPokemonScreenHeader__blink\">[</span> {name}{\" \"}\r\n                  <span className=\"MyPokemonScreenHeader__blink\">]</span>\r\n                </h3>\r\n                <div className=\"flex\">\r\n                  {pokemon.types.map((el, idx) => <i key={idx} className={obtenerClassType(el.type.name)}></i>)}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </Link>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardPokemon;","import CardPokemon from \"./CardPokemon\";\r\n\r\nexport const MostrarCard = ({ filtro, pokemonArray, offset }) => {\r\n    return (\r\n        pokemonArray.map((el, idx) => {\r\n            return <CardPokemon key={idx} name={el.name} url={el.url} />\r\n        })\r\n    )\r\n}\r\nexport default MostrarCard;","import React, { useEffect, useState } from 'react';\r\n//componetes\r\nimport MostrarCard from './MostrarCard';\r\n//style\r\nimport \"../../../styles/components/ContenedorPokemons.css\";\r\n\r\nfunction ContenedorPokemons({ offset, limit, pokemonAll, filtro, cantMaximaPokemon, setCantMaximaPokemon, cantPokemonFetch }) {\r\n    const [pokemonArray, setPokemonAllArray] = useState([{ name: '', url: '' }]);\r\n    //const [pokemonArrayFiltro, setPokemonAllArrayFiltro] = useState([{ name: '', url: '' }]);\r\n\r\n    useEffect(() => {\r\n        let i = offset - 1;\r\n        let auxArray = [];\r\n        let iterar;\r\n        if (pokemonAll.length > 0) {\r\n            if (filtro === \"\") {\r\n                iterar = offset + limit > cantPokemonFetch ? cantPokemonFetch - 1 : offset + limit - 1;\r\n                for (; i <= iterar; i++) {\r\n                    auxArray.push(pokemonAll[i]);\r\n                }\r\n                setPokemonAllArray(auxArray);\r\n            }\r\n            else {\r\n                let arrayFiltro = pokemonAll.filter(el => el.name.toUpperCase().includes(filtro.toUpperCase()));\r\n                setCantMaximaPokemon(arrayFiltro.length);\r\n                iterar = offset + limit > arrayFiltro.length ? arrayFiltro.length - 1 : offset + limit - 1;\r\n                for (; i <= iterar; i++) {\r\n                    auxArray.push(arrayFiltro[i]);\r\n                }\r\n                setPokemonAllArray(auxArray);\r\n            }\r\n        }\r\n    }, [cantPokemonFetch, filtro, limit, offset, pokemonAll, setCantMaximaPokemon])\r\n\r\n\r\n    return (\r\n        <div className=\"ContenedorPokemons__container\">\r\n            {pokemonArray.length > 0 && <MostrarCard filtro={filtro} pokemonArray={pokemonArray} offset={offset} />}\r\n            {pokemonArray.length === 0 && <h5>No se encontro ningun pokemon con el nombre: {filtro}</h5>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContenedorPokemons;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_pokemon';\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED).max(10),\r\n    type: Yup.string().required(TAGS_VALIDATITION_FROM.TYPE.IS_REQUIRED),\r\n    description: Yup.string().required(TAGS_VALIDATITION_FROM.DESCRIPTION.IS_REQUIRED),\r\n    hp: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.HP.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    attack: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.ATTACK.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    defense: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.DEFENSE.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    specialAttack: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPECIAL_ATTACK.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    specialDefense: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPECIAL_DEFENSE.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER),\r\n    speed: Yup.number(TAGS_VALIDATITION_FROM.IS_NUMBER).required(TAGS_VALIDATITION_FROM.SPEED.IS_REQUIRED).positive(TAGS_VALIDATITION_FROM.IS_POSITIVE).integer(TAGS_VALIDATITION_FROM.IS_INTEGER)\r\n});\r\n\r\nexport default Schema;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/pokemon/form_validation/schema_validation/pokemon_schema\";\r\n//error\r\nimport errorHandle from \"../../form/pokemon/form_validation/error_validation/pokemon_errors\";\r\n\r\nexport default function AddPokemonAll({ setAgregarPokemon }) {\r\n    let initialValue = { name: \"\", type: \"\", description: \"\", hp: \"\", attack: \"\", defense: \"\", specialAttack: \"\", specialDefense: \"\", speed: \"\", };\r\n\r\n    const fnValidationForm = (v) => {\r\n        /*   const { id, name, type, description } = v; */\r\n        axios.post('https://back-poke.herokuapp.com/addpokemon', v)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setAgregarPokemon(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Recommend Pokemon</h3>\r\n            <br />\r\n            <br />\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                            <Field as=\"select\"  className=\"input width-100\" name=\"type\" >\r\n                                    <option value=\"fire\">fire</option>\r\n                                    <option value=\"water\">water</option>\r\n                                    <option value=\"electric\">electric</option>\r\n                                    <option value=\"ground\">ground</option>\r\n                                    <option value=\"grass\">grass</option>\r\n                                    <option value=\"ghost\">ghost</option>\r\n                                    <option value=\"flying\">flying</option>\r\n                                    <option value=\"bug\">bug</option>\r\n                                    <option value=\"rock\">rock</option>\r\n                                    <option value=\"fighting\">fighting</option>\r\n                                    <option value=\"steel\">steel</option>\r\n                                    <option value=\"dragon\">dragon</option>\r\n                                    <option value=\"poison\">poison</option>\r\n                                    <option value=\"ice\">ice</option>\r\n                                    <option value=\"normal\">normal</option>\r\n                                    <option value=\"psychic\">psychic</option>\r\n                                    <option value=\"fairy\">fairy</option>\r\n                                    <option value=\"dark\">dark</option>\r\n                                </Field>\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"description\" className=\"input width-100\" placeholder=\"description\" />\r\n                                {errorHandle(errors).description()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"hp\" className=\"input width-100\" placeholder=\"hp\" />\r\n                                {errorHandle(errors).hp()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"attack\" className=\"input width-100\" placeholder=\"attack\" />\r\n                                {errorHandle(errors).attack()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"defense\" className=\"input width-100\" placeholder=\"defense\" />\r\n                                {errorHandle(errors).defense()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"specialAttack\" className=\"input width-100\" placeholder=\"special attack\" />\r\n                                {errorHandle(errors).specialAttack()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"specialDefense\" className=\"input width-100\" placeholder=\"special defense\" />\r\n                                {errorHandle(errors).specialDefense()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"speed\" className=\"input width-100\" placeholder=\"speed\" />\r\n                                {errorHandle(errors).speed()}\r\n                            </section>\r\n                            <section>\r\n                                <br />\r\n                                <button type=\"submit\" className=\"btn btn-form\">Recommend Pokemon</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useState,useEffect} from 'react';\r\n\r\nimport \"../../../styles/components/PaginaMoverNav.css\";\r\nfunction PaginaMoverNav({ offset, limit, setOffset, filtro, cantMaximaPokemon, cantPokemonFetch,page,setPage }) {\r\n    const [cantPage,setCantPage]= useState(1);\r\n    \r\n    useEffect(() => {\r\n        if(filtro===\"\"){\r\n            setCantPage(Math.ceil(cantPokemonFetch/(limit+1)));\r\n        }\r\n        else{\r\n            setCantPage(Math.ceil(cantMaximaPokemon/(limit+1)));\r\n\r\n        }\r\n    },[cantMaximaPokemon, cantPokemonFetch, filtro, limit])\r\n\r\n    function decrementarOffset() {\r\n        if (offset !== 1) {\r\n            setOffset(offset - limit - 1);\r\n            setPage(page-1);\r\n        }\r\n    }\r\n\r\n    function aumentarOffset() {\r\n        if (filtro === \"\") {\r\n            if (offset + limit < cantPokemonFetch) {\r\n                setOffset(offset + limit + 1);\r\n                setPage(page+1);\r\n            }\r\n        }\r\n        else{\r\n            if (offset + limit < cantMaximaPokemon) {\r\n                setOffset(offset + limit + 1);\r\n                setPage(page+1);\r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"PaginaMoverNav\">\r\n            <br/>\r\n            <button className=\"btn\" onClick={decrementarOffset}> Previous</button>\r\n            <button className=\"btn\" onClick={aumentarOffset}> Next</button>\r\n            <h4>Page {page} of {cantPage}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginaMoverNav;","import React, { useEffect, useState } from 'react';\r\n//components\r\nimport NavPokemonAll from '../presentational/PokemonAllScreen/NavPokemonAll';\r\nimport ContenedorPokemons from \"../presentational/PokemonAllScreen/ContenedorPokemons\";\r\nimport AddPokemonAll from '../presentational/PokemonAllScreen/AddPokemonAll';\r\nimport PaginaMoverNav from '../presentational/PokemonAllScreen/PaginaMoverNav';\r\n//style\r\nimport \"../../styles/components/PokemonAllScreen.css\";\r\nimport Nav from '../nav/nav_principal';\r\n\r\n\r\nexport const PokemonAllScreen = () => {\r\n    const [offset, setOffset] = useState(1);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [pokemonAll, setPokemonAll] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const limit = 8;\r\n    const [cantMaximaPokemon, setCantMaximaPokemon] = useState(30);\r\n    const [agregarPokemon, setAgregarPokemon] = useState(false);\r\n    const [cantPokemonFetch, setCantPokemonFetch] = useState(301);\r\n\r\n    useEffect(() => {\r\n        const obtenerPokemons = async (id) => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=\" + cantPokemonFetch + \"&offset=0\");  */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/pokemon\");\r\n            const dataJSON = await data.json();\r\n            setPokemonAll(dataJSON.results);\r\n        }\r\n        const obtenerCantMove = async () => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/pokemoncant\");\r\n            const dataJSON = await data.json();\r\n            setCantPokemonFetch(dataJSON.cant);\r\n        }\r\n        obtenerPokemons();\r\n        obtenerCantMove();\r\n    }, [agregarPokemon]);\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n\r\n            <div className=\"PokemonAllScreen\">\r\n                {agregarPokemon === false &&\r\n                    <>\r\n\r\n                        <NavPokemonAll offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} setFiltro={setFiltro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} setAgregarPokemon={setAgregarPokemon} />\r\n                        <ContenedorPokemons offset={offset} limit={limit} pokemonAll={pokemonAll} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} setCantMaximaPokemon={setCantMaximaPokemon} />\r\n                        <PaginaMoverNav offset={offset} limit={limit} setOffset={setOffset} filtro={filtro} cantMaximaPokemon={cantMaximaPokemon} cantPokemonFetch={cantPokemonFetch} page={page} setPage={setPage} />\r\n                    </>\r\n                }\r\n                {agregarPokemon === true &&\r\n                    <>\r\n                        <AddPokemonAll pokemonAll={pokemonAll} setPokemonAll={setPokemonAll} setAgregarPokemon={setAgregarPokemon}/>\r\n                        <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarPokemon(false) }}>Back</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React/* , { useState, useEffect } */ from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n/* import { obtenerClassType } from \"../visualData/Types\"; */\r\n//styles\r\nimport \"../../../styles/components/CardMovimientos.css\";\r\n\r\nfunction CardMovimiento({ pokeMove }) {\r\n    let id = 1;\r\n    let arrayURL = pokeMove.url.split('/');\r\n    if (arrayURL[6]) {\r\n        id = arrayURL[6];\r\n    }\r\n    return (\r\n        <Link className=\"text-decore-none\" to={\"/moves/\"+id}>\r\n        <li>{pokeMove.name}</li>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default CardMovimiento;","import React, { useEffect, useState } from 'react';\r\nimport CardMovimiento from \"./CardMovimiento\";\r\n//style\r\nimport \"../../../styles/components/MostrarMovimientos.css\";\r\n\r\nexport const MostrarMovimientos = ({ movesAll, filtro }) => {\r\n    const [movesActuales, setMovesActuales] = useState(movesAll);\r\n\r\n    useEffect(() => {\r\n        setMovesActuales([\r\n            ...movesAll.filter(el => el.name.toUpperCase().includes(filtro.toUpperCase()))\r\n        ]);\r\n    }, [filtro, movesAll]);\r\n    return (\r\n        <div className=\"MostrarMovimientos\">\r\n            <ul className=\"MostrarMovimientos__ul\">\r\n            {movesActuales.map((el, idx) => {\r\n                return <CardMovimiento key={idx} pokeMove={el} />\r\n            })\r\n            }\r\n            {movesActuales.length === 0 && <h5>Pokemon {filtro} not found</h5>}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MostrarMovimientos;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from \"../../form/move/form_validation/schema_validation/move_schema\";\r\n//error\r\nimport errorHandle from \"../../form/move/form_validation/error_validation/move_errors\";\r\n//pokemon\r\n\r\nexport default function AddMoveAll({ setAgregarMoves }) {\r\n    let initialValue = { name: \"\", type: \"\", power: \"\" };\r\n\r\n    const fnValidationForm = (v) => { \r\n        axios.post('https://back-poke.herokuapp.com/addmove', v)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setAgregarMoves(false);\r\n    }\r\n    return (\r\n        <div className=\"AddMoveAll\">\r\n            <h3>Add Move</h3>\r\n            <br/>\r\n            <br/>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"name\" className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                            <Field as=\"select\"  className=\"input width-100\" name=\"type\"  >\r\n                                    <option value=\"fire\">fire</option>\r\n                                    <option value=\"water\">water</option>\r\n                                    <option value=\"electric\">electric</option>\r\n                                    <option value=\"ground\">ground</option>\r\n                                    <option value=\"grass\">grass</option>\r\n                                    <option value=\"ghost\">ghost</option>\r\n                                    <option value=\"flying\">flying</option>\r\n                                    <option value=\"bug\">bug</option>\r\n                                    <option value=\"rock\">rock</option>\r\n                                    <option value=\"fighting\">fighting</option>\r\n                                    <option value=\"steel\">steel</option>\r\n                                    <option value=\"dragon\">dragon</option>\r\n                                    <option value=\"poison\">poison</option>\r\n                                    <option value=\"ice\">ice</option>\r\n                                    <option value=\"normal\">normal</option>\r\n                                    <option value=\"psychic\">psychic</option>\r\n                                    <option value=\"fairy\">fairy</option>\r\n                                    <option value=\"dark\">dark</option>\r\n                                </Field>\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"power\" className=\"input width-100\" placeholder=\"power\" />\r\n                                {errorHandle(errors).power()}\r\n                            </section>\r\n                            <section>\r\n                                {/* <Field name=\"description\" className=\"input width-100\" placeholder=\"description\" />\r\n                                {errorHandle(errors).description()} */}\r\n                            </section>\r\n                            <section>\r\n                            <br/>\r\n                                <button type=\"submit\" className=\"btn btn-form\">Save</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n//components\r\nimport MostrarMovimientos from '../presentational/MovimientosAllScreen/MostrarMovimientos';\r\nimport AddMoveForm from '../presentational/MovimientosAllScreen/AddMoveAll';\r\n//styles\r\nimport \"../../styles/components/MovimientosAllScreen.css\";\r\nimport Spinner from '../img/spinner5.gif';\r\nimport Nav from '../nav/nav_principal';\r\n\r\n\r\nexport const MovimientosAllScreen = () => {\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const [movesAll, setmovesAll] = useState([]);\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [agregarMoves, setAgregarMoves] = useState(false);\r\n\r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerMovimientos = async (id) => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/?offset=0&limit=\" + cantMovesFetch); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/moves\");\r\n            const dataJSON = await data.json();\r\n            setmovesAll(dataJSON.results);\r\n        }\r\n        obtenerMovimientos();\r\n        setSpinner(false);\r\n    }, [agregarMoves]);\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<>\r\n        <Nav />\r\n        <div className=\"MovimientosAllScreen \">\r\n            {agregarMoves === false &&\r\n                <>\r\n                    <div className=\"MovimientosAllScreen__filter\">\r\n                        <button className='btn btn-add' onClick={() => setAgregarMoves(true)} >Add moves</button>\r\n                        <input className=\"filter__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search Move\" />\r\n                    </div>\r\n                    {spinner === true && spinnerOn()}\r\n                    {spinner === false && <MostrarMovimientos movesAll={movesAll} filtro={filtro} />}\r\n                </>}\r\n            {agregarMoves === true && <>\r\n                <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n                    <AddMoveForm setAgregarMoves={setAgregarMoves}  />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarMoves(false) }}>Back</button>\r\n                </div>\r\n            </>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\nimport axios from \"axios\";\r\n//Schema\r\nimport Schema from \"../../form/move/form_validation/schema_validation/move_schema\";\r\n//error\r\nimport errorHandle from \"../../form/move/form_validation/error_validation/move_errors\"\r\n//pokemon\r\nexport default function EditMoveAll({id, setEditMoves }) {\r\n    let initialValue = { name: \"\", type: \"\", power: \"\" };\r\n\r\n    const fnValidationForm = (v) => {\r\n        const { name, type, power } = v;\r\n        let newMove = { id, name, type, power };\r\n        axios.put('https://back-poke.herokuapp.com/editMove', newMove)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setEditMoves(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Edit Pokemon</h3>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form>\r\n                            <section>\r\n                                <Field name=\"name\"  className=\"input width-100\" placeholder=\"name\" />\r\n                                {errorHandle(errors).name()}\r\n                            </section>\r\n                            <section>\r\n                                <Field as=\"select\"  className=\"input width-100\" name=\"type\" >\r\n                                    <option value=\"fire\">fire</option>\r\n                                    <option value=\"water\">water</option>\r\n                                    <option value=\"electric\">electric</option>\r\n                                    <option value=\"ground\">ground</option>\r\n                                    <option value=\"grass\">grass</option>\r\n                                    <option value=\"ghost\">ghost</option>\r\n                                    <option value=\"flying\">flying</option>\r\n                                    <option value=\"bug\">bug</option>\r\n                                    <option value=\"rock\">rock</option>\r\n                                    <option value=\"fighting\">fighting</option>\r\n                                    <option value=\"steel\">steel</option>\r\n                                    <option value=\"dragon\">dragon</option>\r\n                                    <option value=\"poison\">poison</option>\r\n                                    <option value=\"ice\">ice</option>\r\n                                    <option value=\"normal\">normal</option>\r\n                                    <option value=\"psychic\">psychic</option>\r\n                                    <option value=\"fairy\">fairy</option>\r\n                                    <option value=\"dark\">dark</option>\r\n                                </Field>\r\n{/*                                 <Field name=\"type\" className=\"input width-100\" placeholder=\"type\" /> */}\r\n                                {errorHandle(errors).type()}\r\n                            </section>\r\n                            <section>\r\n                                <Field name=\"power\"  className=\"input width-100\" placeholder=\"power\"/>\r\n                                {errorHandle(errors).power()}\r\n                            </section>\r\n                            <section>\r\n                                <button type=\"submit\" className=\"btn btn-form\">Confirm</button>\r\n                            </section>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/PokeBall.0ae55d07.png\";","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//components\r\nimport { obtenerClassType } from \"../presentational/visualData/Types\";\r\nimport { useParams } from 'react-router';\r\nimport Spinner from '../img/spinner5.gif';\r\n\r\n//styles\r\nimport \"../../styles/components/MovimientoScreen.css\";\r\nimport Nav from '../nav/nav_principal';\r\nimport EditMove from \"../presentational/MovimientoScreen/EditMove\"\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const MovimientoScreen = () => {\r\n    const { id } = useParams();\r\n    const [move, setMove] = useState({ id: \"\", power: \"0\", type: { name: \"\" } });\r\n    const [pagNext, setPagNext] = useState(826);\r\n    const [pagBack, setPagBack] = useState(1);\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [editMoves, setEditMoves] = useState(false);\r\n    const [cantMoves, setCantMoves] = useState(826);\r\n\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerMove = async () => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/movesOne/\" + id);\r\n            const dataJSON = await data.json();\r\n            setMove(dataJSON);\r\n            setSpinner(false);\r\n        }\r\n        const obtenerCantMove = async () => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/movescant\");\r\n            const dataJSON = await data.json();\r\n            setCantMoves(dataJSON.cant);\r\n        }\r\n        obtenerMove();\r\n        obtenerCantMove();\r\n        if (parseInt(id) > 1) {\r\n            setPagBack(parseInt(id) - 1);\r\n        }\r\n        if (parseInt(id)< cantMoves) {\r\n            setPagNext(parseInt(id) + 1);\r\n        }\r\n    }, [id, editMoves, cantMoves])\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const spinnerOff = () => {\r\n        return (\r\n            <div className=\"MovimientoScreen\">\r\n                {editMoves === false &&\r\n                    <>\r\n                        <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n                        <div className=\"MovimientoScreen__sup flex-centerAll\">\r\n                            <Link className=\"text-decore-none\" to={\"/moves/\"}><button className=\"btn\" >Back</button></Link>\r\n                            <button className='btn' onClick={() => setEditMoves(true)} >Edit move</button>\r\n                        </div>\r\n                        <ul className=\"MovimientoScreen__ul\">\r\n                            <ul className=\"MovimientoScreen__ul__ul\">\r\n                                <li className=\"MovimientoScreen__li flex-align-center\">ID:</li>\r\n                                <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.id}</li>\r\n                            </ul>\r\n                            <ul className=\"MovimientoScreen__ul__ul\">\r\n                                <li className=\"MovimientoScreen__li flex-align-center\">Name:</li>\r\n                                <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.name}</li>\r\n                            </ul>\r\n                            <ul className=\"MovimientoScreen__ul__ul\">\r\n                                <li className=\"MovimientoScreen__li flex-align-center\">TYPE-NAME:</li>\r\n                                <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" ><i>{move.type.name}</i>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"MovimientoScreen__ul__ul\">\r\n                                <li className=\"MovimientoScreen__li flex-align-center\">TYPE:</li>\r\n                                <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >\r\n                                    <i className={obtenerClassType(move.type.name)}></i>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"MovimientoScreen__ul__ul\">\r\n                                <li className=\"MovimientoScreen__li flex-align-center\">POWER:</li>\r\n                                <li className=\"MovimientoScreen__li MovimientoScreen_flexRight\" >{move.power}</li>\r\n                            </ul>\r\n                        </ul>\r\n                        <div>\r\n                            <Link className=\"text-decore-none\" to={\"/moves/\" + pagBack}><button className=\"btn\" >Previous</button></Link>\r\n                            <Link className=\"text-decore-none\" to={\"/moves/\" + pagNext}>  <button className=\"btn\" >Next</button></Link>\r\n                        </div>\r\n                    </>}\r\n                    {editMoves === true && <>\r\n                <div className=\"MovimientoScreen__Edit\">\r\n                    <EditMove move={move} setMove={setMove} id={id} setEditMoves={setEditMoves}  />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setEditMoves(false) }}>Back</button>\r\n                </div>\r\n            </>}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Nav />\r\n            {spinner === true && spinnerOn()}\r\n            {spinner === false && spinnerOff()}\r\n            <></>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default MovimientoScreen;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport pokeBall from '../img/PokeImgs/PokeBall.png'\r\n\r\nexport const Error504 = () => {\r\n    return (\r\n        <div className='Error504'>\r\n            <div>\r\n                <h1>ERROR 404</h1>\r\n                <h1>HAGA CLICK</h1>\r\n                <Link to={ '/home' }> <h1 className='Error504__aqui'>AQUI</h1> </Link>\r\n                <h1>PARA VOLVER ATRAS</h1>\r\n            </div>\r\n            <img src= {pokeBall} className='pokeBallBg' alt=\"Pokeball\" />\r\n        </div>\r\n    )\r\n}\r\n","const TAGS_VALIDATITION_FROM={\r\n    EMAIL:{\r\n        IS_REQUIRED:\"Email is required\"\r\n    },\r\n    PASS:{\r\n        IS_REQUIRED:\"Pass is required\"\r\n    },\r\n    IS_INTEGER:\"Must be integer\",\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_login'\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string().required(TAGS_VALIDATITION_FROM.EMAIL.IS_REQUIRED).email(),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        email(){\r\n            return errors.email && (<div>{errors.email}</div>)\r\n        }, \r\n        pass(){\r\n            return errors.pass && (<div>{errors.pass}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../form/login/form_validation/schema_validation/login_schema';\r\n//error\r\nimport errorHandle from '../form/login/form_validation/error_validation/login_errors';\r\nimport { useNavigate } from 'react-router-dom';\r\n//audio\r\n// import Audio from '../audio/audio';\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n// import NavBurger from \"../nav/nav_prueba/nav\";\r\n\r\nexport const LoginScreen = () => {\r\n    let initialValue = { email: \"\", pass: \"\" };\r\n    const navigate = useNavigate();\r\n\r\n    const fnValidationForm = (v) => {\r\n        /* alert('Bienvenido a PokeDev!'); */\r\n        axios.post('https://back-poke.herokuapp.com/login', v)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                if (response.data.token === false) {\r\n                    Swal.fire(\r\n                        'Invalid Pass',\r\n                        'error',\r\n                    )\r\n                }\r\n                else {\r\n                    navigate('/home');\r\n                    localStorage.clear();\r\n                    localStorage.setItem('user', response.data.name);\r\n                    localStorage.setItem('id', response.data.id);\r\n                    Swal.fire(\r\n                        'Welcome Mr',\r\n                        response.data.name,\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        /* alert(JSON.stringify(v)); */\r\n    }\r\n\r\n    /*     useEffect(() => {\r\n            if(login===true){\r\n                navigate('/home');\r\n            }\r\n        }, [login, navigate]) */\r\n\r\n    const newUser = () => navigate('/newUser')\r\n    // const swalF = () => {\r\n    //     return Swal.fire(\r\n    //                         'Welcome Mr',\r\n    //                         'You clicked the button!',\r\n    //                         'success'\r\n    //                     )}\r\n\r\n    return (\r\n\r\n        <div className='LoginScreen'>\r\n            {/* <NavBurger/> */}\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n\r\n                        <Form className='LoginScreen__form'>\r\n                            <h3>WELCOME TO <br /><br /> POKE DEV!</h3>\r\n                            <Field className=\"input input-big\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n\r\n                            <Field type=\"password\" className=\"input input-big\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n\r\n                            <button className='btn LoginScreen__btndiv' type=\"submit\">Login</button>\r\n                            <button className='btn' type=\"button\" onClick={newUser}>New User</button>\r\n                            {/* <button onClick={ () => swalF()}>Prueba SWAL</button> */}\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n\r\n            <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n            {/* <Audio /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n","const TAGS_VALIDATITION_FROM={\r\n    EMAIL:{\r\n        IS_REQUIRED:\"Email is required\"\r\n    },\r\n    PASS:{\r\n        IS_REQUIRED:\"Pass is required\"\r\n    },\r\n    NAME:{\r\n        IS_REQUIRED:\"Name is required\"\r\n    },\r\n    IS_INTEGER:\"Must be integer\",\r\n};\r\n\r\nexport default TAGS_VALIDATITION_FROM;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_newUser'\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED).max(10),\r\n    email: Yup.string().required(TAGS_VALIDATITION_FROM.EMAIL.IS_REQUIRED).email(),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n    \r\n});\r\n\r\nexport default Schema;","export default function errorHandle(errors){\r\n    return {\r\n        email(){\r\n            return errors.email && (<div>{errors.email}</div>)\r\n        }, \r\n        pass(){\r\n            return errors.pass && (<div>{errors.pass}</div>)\r\n        },\r\n        name(){\r\n            return errors.name && (<div>{errors.name}</div>)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../form/addUser/form_validation/schema_validation/addUser_schema';\r\n//error\r\nimport errorHandle from '../form/addUser/form_validation/error_validation/addUser_errors';\r\nimport { useNavigate } from 'react-router-dom';\r\n//audio\r\n// import Audio from '../audio/audio';\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const NewUserScreen = () => {\r\n\r\n    let initialValue = { name: \"\", email: \"\", pass: \"\" };\r\n    const navigate = useNavigate();\r\n\r\n    const fnValidationForm = (v) => {\r\n        axios.post('https://back-poke.herokuapp.com/add/user', v)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        /* alert(JSON.stringify(v)); */\r\n        navigate('/');\r\n    }\r\n\r\n    const goBack = () => navigate('/')\r\n\r\n    return (\r\n        <div className='NewUserScreen'>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='NewUserScreen__form'>\r\n                            <h3>CREATE <br /> <br /> NEW USER</h3>\r\n                            <Field className=\"input input-big\" name=\"name\" placeholder=\"Name\" />\r\n                            {errorHandle(errors).name()}\r\n                            <Field className=\"input input-big\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n\r\n                            <Field type=\"password\" className=\"input input-big\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n                            <button className='btn' type=\"submit\">Create New User</button>\r\n                            <button className='btn NewUserScreen__btndiv' type=\"button\" onClick={goBack}>Go Back</button>\r\n                        </Form>)\r\n                }}\r\n            </Formik>\r\n            <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg' />\r\n            {/* <Audio/> */}\r\n        </div>\r\n    )\r\n}\r\n","import React/* , { useState, useEffect } */ from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\n/* import { obtenerClassType } from \"../visualData/Types\"; */\r\n//styles\r\nimport \"../../../styles/components/CardUsers.css\";\r\n\r\nfunction CardUser({ user, id }) {\r\n    const idx=id+1\r\n    let path;\r\n    if(idx>8){\r\n        path = \"/entrenador/e7.png\";\r\n    }\r\n    else{\r\n        path = \"/entrenador/e\"+idx+\".png\";\r\n    }\r\n /*    let img=\"UsuariosAllScreen__img UsuariosAllScreen__img\"+idx; */\r\n    return (\r\n        <Link className=\"text-decore-none\" to={\"/users/\" + id}>\r\n            <div className=\"UsuariosAllScreen__card\">\r\n                {/* <div className= {img} alt=\"entrenador\" /> */}\r\n                <img  className=\"UsuariosAllScreen__img\" src={process.env.PUBLIC_URL + path} alt=\"logo\" />\r\n                <h3>\r\n                    <span className=\"MyPokemonScreenHeader__blink \">[</span> {user.name}{\" \"}\r\n                    <span className=\"MyPokemonScreenHeader__blink\">]</span>\r\n                </h3>\r\n                {/* <img src={`./e1.png`} alt=\"Entrenador\"></img> */}\r\n                {/* <img src={require(`../../img/entrenador/e1.png`)}  alt=\"Entrenador\"/> */}\r\n               {/*  <img src={ `./assets/heroes/${ id }.jpg` } className=\"card-img\" alt={ superhero } /> */}\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default CardUser;","import React, { useEffect, useState } from 'react';\r\nimport CardUser from \"./CardUser\";\r\n//style\r\nimport \"../../../styles/components/MostrarUsers.css\";\r\nexport const MostrarUsers = ({ userAll, filtro }) => {\r\n    const [usuariosActuales, setUsuariosActuales] = useState(userAll);\r\n\r\n    useEffect(() => {\r\n        setUsuariosActuales([\r\n            ...userAll.filter(el => el.name.toUpperCase().includes(filtro.toUpperCase()))\r\n        ]);\r\n    }, [filtro, userAll]);\r\n    return (\r\n        <div className=\"MostrarUsers\">\r\n            <ul className=\"MostrarUsers__ul\">\r\n            {usuariosActuales.map((el, idx) => {\r\n                return <CardUser key={idx} user={el}  id={idx}/>\r\n            })\r\n            }\r\n            {usuariosActuales.length === 0 && <h5>User {filtro} not found</h5>}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default MostrarUsers;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\n\r\n//Schema\r\nimport Schema from '../../form/addUser/form_validation/schema_validation/addUser_schema';\r\n//error\r\nimport errorHandle from '../../form/addUser/form_validation/error_validation/addUser_errors';\r\n//style\r\nimport \"../../../styles/components/AddUserFromix.css\";\r\n\r\nexport const AddUserFromix = ({ setAgregarUsuario }) => {\r\n\r\n    let initialValue = { name:\"\",email: \"\", pass: \"\" };\r\n\r\n    const fnValidationForm = (v) => {\r\n        axios.post('https://back-poke.herokuapp.com/add/user', v)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setAgregarUsuario(false);\r\n    }\r\n\r\n    return (\r\n        <div className='AddUserFromixScreen'>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='AddUserFromixScreen__form'>\r\n                            <h3>CREATE NEW USER</h3>\r\n                            <br />\r\n                            <br />\r\n                            <Field className=\"input width-100\" name=\"name\" placeholder=\"Name\" />\r\n                            {errorHandle(errors).name()}\r\n                            <Field className=\"input width-100\" name=\"email\" placeholder=\"E-mail\" />\r\n                            {errorHandle(errors).email()}\r\n                            <Field className=\"input width-100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n                            <br />\r\n                            <button className='btn btn-form' type=\"submit\">Create New User</button>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserFromix;","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../img/spinner5.gif';\r\nimport { MostrarUsers } from \"../presentational/UsuariosAllScreen/MostrarUsers\";\r\nimport Nav from '../nav/nav_principal';\r\nimport AddUserFromix from '../presentational/UsuariosAllScreen/AddUserFromix'\r\n//style\r\nimport \"../../styles/components/UsuariosAllScreen.css\";\r\n\r\nexport const UsuariosAllScreen = ({ users }) => {\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [userAll, setUserAll] = useState([]);\r\n    const [agregarUsuario, setAgregarUsuario] = useState(false);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n\r\n    const handleChange = (evt) => {\r\n        setFiltro(evt.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerUsers = async () => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/users/\");\r\n            const dataJSON = await data.json();\r\n            setUserAll(dataJSON)\r\n        }\r\n        obtenerUsers();\r\n        setSpinner(false);\r\n    }\r\n        , [agregarUsuario])\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (<>\r\n        <Nav />\r\n        <div className=\"MovimientosAllScreen \">\r\n            {agregarUsuario === false &&\r\n                <>\r\n                    <div className=\"MovimientosAllScreen__filter\">\r\n                        <button className='btn btn-add' onClick={() => setAgregarUsuario(true)} >Add User</button>\r\n                        <input className=\"filter__input \" type=\"text\" value={filtro} onChange={handleChange} name=\"filtro\" placeholder=\"Search User\" />\r\n                    </div>\r\n                    {spinner === true && spinnerOn()}\r\n                    {spinner === false && <MostrarUsers userAll={userAll} filtro={filtro} />}\r\n                </>}\r\n            {agregarUsuario === true && <>\r\n                <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n                    <AddUserFromix setAgregarUsuario={setAgregarUsuario} />\r\n                    <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setAgregarUsuario(false) }}>Back</button>\r\n                </div>\r\n            </>}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UsuariosAllScreen;","import * as Yup from \"yup\";\r\nimport TAGS_VALIDATITION_FROM from '../../tags_validation/tag_newUser'\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string().required(TAGS_VALIDATITION_FROM.NAME.IS_REQUIRED).max(10),\r\n    pass: Yup.string().required(TAGS_VALIDATITION_FROM.PASS.IS_REQUIRED),\r\n    \r\n});\r\n\r\nexport default Schema;","import React from 'react';\r\nimport { Formik, Form, Field } from \"formik\";  //validar formulario\r\nimport axios from \"axios\";\r\n\r\n//Schema\r\nimport Schema from '../../form/addUser/form_validation/schema_validation/editUser_schema';\r\n//error\r\nimport errorHandle from '../../form/addUser/form_validation/error_validation/addUser_errors';\r\n//style\r\nexport const EditUserFromix = ({ user, setEditarUsuario}) => {\r\n\r\n    let initialValue = { name:\"\",email: \"\", pass: \"\" };\r\n    const fnValidationForm = (v) => {\r\n\r\n        let body={...v,email:user.email}\r\n       /*  alert(JSON.stringify(body)); */\r\n        axios.put('https://back-poke.herokuapp.com/user/cambiar/', body)\r\n            .then(function (response) {\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        setEditarUsuario(false)\r\n    }\r\n\r\n    return (\r\n        <div className='EditUserFromixScreen'>\r\n            <Formik\r\n                initialValues={initialValue}\r\n                validationSchema={Schema}\r\n                onSubmit={fnValidationForm}>\r\n                {({ errors }) => {\r\n                    return (\r\n                        <Form className='flex-column '>\r\n                            <h3>EDIT USER</h3>\r\n                            <br />\r\n                            <br />\r\n                            <Field className=\"input width-100\" name=\"name\" placeholder=\"Name\" />\r\n                            {errorHandle(errors).name()}\r\n                            <Field className=\"input width-100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\r\n                            {errorHandle(errors).pass()}\r\n                            <br />\r\n                            <button className='btn btn-form' type=\"submit\">Confirm</button>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUserFromix;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//inicializador pokemon\r\nimport pokemonInit from '../../initializerJSON/pokemonInitJSON';\r\n\r\n//style\r\nimport \"../../../styles/components/HiredPokemon.css\"; \r\nimport Spinner from '../../img/spinner5.gif';\r\n\r\nfunction HiredPokemon({ id}) {\r\n    const [spinner, setSpinner] = useState(true);\r\n\r\n    const imgSrc = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/\" + id + \".svg\";\r\n    const [pokemon, setPokemon] = useState(pokemonInit)\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        obtenerPokemon(id);\r\n    }, [id]);\r\n\r\n\r\n    const obtenerPokemon = async (id) => {\r\n        const data = await fetch('https://back-poke.herokuapp.com/pokemonOne/' + id)\r\n        const dataJSON = await data.json();\r\n        setPokemon(dataJSON);\r\n        setSpinner(false);\r\n    }\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner-card\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            {spinner === true && spinnerOn()}\r\n            {spinner === false &&\r\n                <Link to={\"/pokemon/\" + id}>\r\n                            <div className=\"HiredPokemon\">\r\n                                <img className=\"HiredPokemon__img\" src={imgSrc} alt=\"imagen\" />\r\n                                <h4 className=\"HiredPokemon__name \">\r\n                                    {pokemon.name}\r\n                                </h4>\r\n                            </div>\r\n                </Link>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HiredPokemon;","import React from 'react';\r\nimport HiredPokemon from \"./HiredPokemon\";\r\n//style\r\n/* import \"../../../styles/components/MostrarPokemones.css\"; */\r\nexport const MostrarPokemones = ({ pokemons }) => {\r\n    return (\r\n        <>\r\n            {pokemons.map((id) => {\r\n                return <HiredPokemon key={id} id={id} />\r\n            })\r\n            }\r\n            {pokemons.length === 0 && <h5>does not have pokemon</h5>}\r\n        </>\r\n    )\r\n\r\n}\r\nexport default MostrarPokemones;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\n//componets\r\nimport Nav from '../nav/nav_principal';\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from '../img/spinner5.gif';\r\n//style\r\nimport \"../../styles/components/UsuarioScreen.css\";\r\nimport EditUserFromix from \"../presentational/UsuarioScreen/EditUserFromix\"\r\nimport MostrarPokemones from \"../presentational/UsuarioScreen/MostrarPokemones\"\r\nimport pokeball from '../../components/img/PokeImgs/PokeBall.png'\r\n\r\nexport const UsuarioScreen = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({ name: \"\", email: \"\", pass: \"\", pokemons: [] });\r\n    const [editarUsuario, setEditarUsuario] = useState(false);\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [userId, setUserId] = useState('')\r\n\r\n    useEffect(() => {\r\n        setSpinner(true);\r\n        const obtenerUsers = async () => {\r\n            /* const data = await fetch(\"https://pokeapi.co/api/v2/move/\" + id); */\r\n            const data = await fetch(\"https://back-poke.herokuapp.com/user/\" + id);\r\n            const dataJSON = await data.json();\r\n            setUser(dataJSON);\r\n            setSpinner(false);\r\n            let userId = localStorage.getItem('id')\r\n            setUserId(userId)\r\n        }\r\n        obtenerUsers();\r\n\r\n    }, [id, editarUsuario])\r\n\r\n    const spinnerOn = () => {\r\n        return (\r\n            <div className=\"flex-centerAll\">\r\n                <div className=\"spinner\">\r\n                    <div className=\"spinner__fondo\"></div>\r\n                    <img className='spinner__imagen' src={Spinner} alt=\"foto\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            {spinner === true && spinnerOn()}\r\n            {spinner === false && <div className='UsuarioScreen'>\r\n                {editarUsuario === false && <>\r\n                    <div className='UsuarioScreen__Card'>\r\n                        <div className='UsuarioScreen__list'>\r\n                            <div className=\"UsuarioScreen__dato\">ID:</div>\r\n                            <div className=\"UsuarioScreen__dato\">{id}</div>\r\n                        </div>\r\n                        <div className='UsuarioScreen__list'>\r\n                            <div className=\"UsuarioScreen__dato\">Name:</div>\r\n                            <div className=\"UsuarioScreen__dato\">{user.name}</div>\r\n                        </div>\r\n                        <div className='UsuarioScreen__list'>\r\n                            <div className=\"UsuarioScreen__dato\">Email:</div>\r\n                            <div className=\"UsuarioScreen__dato\">{user.email}</div>\r\n                        </div>\r\n                        <div className='UsuarioScreen__list'>\r\n                            <div className=\"UsuarioScreen__dato\">Password:</div>\r\n                            <div className=\"UsuarioScreen__dato\">{userId === id ? user.pass : '**********' }</div> \r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='flex-centerAll'>\r\n                        <Link to={\"/users/\"}><button className=\"btn\">BACK</button></Link>\r\n                        {userId === id && <button className=\"btn\" onClick={() => setEditarUsuario(true)}>EDIT</button> }\r\n                        <img src={pokeball} alt=\"pokeBall\" className='pokeBallBg UsuarioScreen__pokeball' />\r\n                    </div>\r\n                    <div className=\"UsuarioScreen__Contratos\">\r\n                        <h4>Contracted Pokemon</h4>\r\n                        <div className=\"Contratos__container\">\r\n                            <MostrarPokemones pokemons={user.pokemons} />\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {editarUsuario === true && <>\r\n                    <div className=\"MovimientosAllScreen__AddMoveAll\">\r\n\r\n                        <EditUserFromix user={user} setEditarUsuario={setEditarUsuario} />\r\n\r\n\r\n                        <button className=\"btn btn-form\" type=\"submit\" onClick={() => { setEditarUsuario(false) }}>Back</button>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioScreen;","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className='footer' >\r\n            <div>\r\n                <p>PokeDev</p>\r\n                <p>An app made it with <i className=\"fas fa-heart\"> </i> By :</p>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://www.linkedin.com/in/facundo-perez-agustin\"> <i className=\"fab fa-linkedin\"></i>&nbsp; Facundo Perez</a>\r\n                <a href='https://www.linkedin.com/in/artur-fruttero/'> <i className=\"fab fa-linkedin\"></i> &nbsp;Artur Fruttero </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import './styles/style.css'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\n//components\r\nimport { PokemonScreen } from './components/screens/PokemonScreen';\r\nimport { PokemonAllScreen } from './components/screens/PokemonAllScreen';\r\nimport { MovimientosAllScreen } from './components/screens/MovimientosAllScreen';\r\nimport MovimientosScreen from './components/screens/MovimientoScreen';\r\nimport { Error504 } from './components/screens/Error504';\r\nimport { LoginScreen } from './components/screens/LoginScreen';\r\nimport { NewUserScreen } from './components/screens/NewUserScreen';\r\nimport {UsuariosAllScreen} from './components/screens/UsuariosAllScreen';\r\nimport {UsuarioScreen} from './components/screens/UsuarioScreen';\r\nimport { Footer } from './components/footer/Footer';\r\n/* import Audio from \"./components/audio/audio\"; */\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes >\r\n          <Route path=\"/newUser\" element={<NewUserScreen />} />\r\n          <Route path=\"/users\" element={<UsuariosAllScreen />} />\r\n          <Route path=\"/users/:id\" element={<UsuarioScreen />} />\r\n          <Route path=\"/\" element={<LoginScreen />} />\r\n          <Route path=\"/home\" element={<PokemonAllScreen />} />\r\n          <Route path='/pokemon/:id' element={<PokemonScreen />} />\r\n          <Route path=\"/moves\" element={<MovimientosAllScreen />} />\r\n          <Route path=\"/moves/:id\" element={<MovimientosScreen />} />\r\n          <Route path=\"*\" element={<Error504 />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}